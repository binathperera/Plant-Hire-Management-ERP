/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lk.buildcostaffapplication.view;

import java.awt.Desktop;
import java.io.File;
import java.io.IOException;
import java.time.LocalDate;
import java.time.LocalTime;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.Enumeration;
import java.util.Random;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.AbstractButton;
import javax.swing.ButtonGroup;
import javax.swing.ButtonModel;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import lk.buildcostaffapplication.controller.EmployeeController;
import lk.buildcostaffapplication.dto.EmployeeDTO;
import lk.buildcostaffapplication.dto.SuperDTO;
import lk.buildcostaffapplication.dto.WorkRecordDTO;
import lk.buildcostaffapplication.connection.DBconnection;

/**
 *
 * @author Binath Perera
 */
public class EmployeesPanel extends JPanel {
    
    EmployeeController controller;
    private Pattern pattern;
    private Matcher matcher;
    ArrayList<SuperDTO> allEmployees;
    private static final String TIME24HOURS_PATTERN = "^(([0-9])|([0-1][0-9])|([2][0-3])):(([0-9])|([0-5][0-9])):(([0-9])|([0-5][0-9]))$";
    
    private String nic,birthday,nationality,firstName,middleName,lastName,bloodGroup
        ,gender,permanantAddress,addressForCorrespondance,
        contactNumber,email,emergencyContactNumber,emergencyContactPerson,
        relationshipWithEmergencyContactPerson, department, designation,
        employeeID,managerID ,dateOfJoining, bankAccountNumber,bankName,bankBranch;
    private String existingnic,existingbirthday,existingnationality,existingfirstName,existingmiddleName,existinglastName,existingbloodGroup
        ,existinggender,existingpermanantAddress,existingaddressForCorrespondance,
        existingcontactNumber,existingemail,existingemergencyContactNumber,existingemergencyContactPerson,
        existingrelationshipWithEmergencyContactPerson, existingdepartment, existingdesignation,
        existingemployeeID,existingmanagerID ,existingdateOfJoining, existingbankAccountNumber,existingbankName,existingbankBranch,
        existingorkLocation,existingworkDetails,existingdateOfLeaving;
    private boolean maritalStatus,employmentStatus, clockedIn;
    private boolean existingmaritalStatus,existingemploymentStatus, existingclockedIn;
    private File qualifications,employmentAgreement,existingQualifications,existingEmploymentAgreement;
    private double salary, otrate,hpd;
    private double existingsalary, existingotrate,existinghpd;
    
    /**
     * Creates new form EmployeePanel
     */
    public EmployeesPanel() {
        initComponents();
        employeeTabbedPane.removeAll();
        existingEmployeeDetailsTabbedPane.removeAll();
        controller=new EmployeeController();
        pattern = Pattern.compile(TIME24HOURS_PATTERN);
        removeEmployeeButton.setEnabled(false);
        uploadDayDetailsButton.setEnabled(false);
        updateContactDetailsButton.setEnabled(false);
        updateWorkHistoryRecordButton.setEnabled(false);
        removeWorkHistoryRecordButton.setEnabled(false);
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        genderButtonGroup = new javax.swing.ButtonGroup();
        maritalStatusButtonGroup = new javax.swing.ButtonGroup();
        employmentStatusButtonGroup = new javax.swing.ButtonGroup();
        existingEmployeeMaritalStatusButtonGroup = new javax.swing.ButtonGroup();
        existingEmployeeGenderButtonGroup = new javax.swing.ButtonGroup();
        existingEmploymentStatusButtonGroup = new javax.swing.ButtonGroup();
        employeeTabbedPane = new javax.swing.JTabbedPane();
        existingEmployeePanel = new javax.swing.JPanel();
        searchPanel = new javax.swing.JPanel();
        searchComboBox = new javax.swing.JComboBox<>();
        searchBarTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        searchResultsTable = new javax.swing.JTable();
        removeEmployeeButton = new javax.swing.JButton();
        existingEmployeeDetailsTabbedPane = new javax.swing.JTabbedPane();
        otherDetailsPanel = new javax.swing.JPanel();
        existingEmployeeEmploymentDetailsPanel = new javax.swing.JPanel();
        existingEmployeeDesignationLabel = new javax.swing.JLabel();
        existingEmployeeDesignationTextField = new javax.swing.JTextField();
        existingEmployeeSalaryTextField = new javax.swing.JTextField();
        newEmployeeAgreementLabel1 = new javax.swing.JLabel();
        existingEmployeeAgreementUploadButton = new javax.swing.JButton();
        existingEmployeeIDLabel = new javax.swing.JLabel();
        existingEmployeeIDTextField = new javax.swing.JTextField();
        existingEmployeeEmploymentStatusLabel = new javax.swing.JLabel();
        existingEmployeeActiveRadioButton = new javax.swing.JRadioButton();
        existingEmployeeInactiveRadioButton = new javax.swing.JRadioButton();
        existingEmployeeDateOfJoinLabel = new javax.swing.JLabel();
        existingEmployeeDateOfJoiningTextField = new javax.swing.JTextField();
        existingEmployeeBankAccountNumberLabel = new javax.swing.JLabel();
        existingEmployeeBankNumberTextField = new javax.swing.JTextField();
        existingEmployeeBankNameLabel = new javax.swing.JLabel();
        existingEmployeeBankNameTextField = new javax.swing.JTextField();
        existingEmployeeBankBranchLabel = new javax.swing.JLabel();
        existingEmployeeBankBranchTextField = new javax.swing.JTextField();
        existingEmployeeManagerIDLabel = new javax.swing.JLabel();
        existingEmployeeManagerIDTextField = new javax.swing.JTextField();
        existingEmployeeAgreementViewButton = new javax.swing.JButton();
        existingEmployeeAgreementFileName = new javax.swing.JLabel();
        existingEmployeeDapartmentLabel = new javax.swing.JLabel();
        existingEmployeeDepartmentTextField = new javax.swing.JTextField();
        existingEmployeeQualificationsLabel = new javax.swing.JLabel();
        existingEmployeeQualificationsUploadButton = new javax.swing.JButton();
        existingEmployeeQualificationsViewButton = new javax.swing.JButton();
        existingEmployeeQualificationsFileName = new javax.swing.JLabel();
        existingEmployeeOTRateLabel = new javax.swing.JLabel();
        existingEmployeeCalculateHourRateTextField = new javax.swing.JTextField();
        existingEmployeeOTRateTextField = new javax.swing.JTextField();
        existingEmployeeMondayCheckBox = new javax.swing.JCheckBox();
        existingEmployeeTuesdayCheckBox = new javax.swing.JCheckBox();
        existingEmployeeWednesdayCheckBox = new javax.swing.JCheckBox();
        existingEmployeeThursdayCheckBox = new javax.swing.JCheckBox();
        existingEmployeeFridayCheckBox = new javax.swing.JCheckBox();
        existingEmployeeSaturdayCheckBox = new javax.swing.JCheckBox();
        existingEmployeeSundayCheckBox = new javax.swing.JCheckBox();
        existingEmployeeWorkWeekLabel = new javax.swing.JLabel();
        existingEmployeeWorkHoursPerDayTextField = new javax.swing.JTextField();
        existingEmployeeWorkHoursPerDayLabel = new javax.swing.JLabel();
        existingEmployeeSalaryLabel = new javax.swing.JLabel();
        existingEmployeeCalculateHourRateButton = new javax.swing.JButton();
        existingEmployeeDateOfLeaveLabel = new javax.swing.JLabel();
        existingEmployeeDateOfLeaveTextField = new javax.swing.JTextField();
        updateEmploymentDetailsButton = new javax.swing.JButton();
        existingEmployeeQualificationsRemoveButton = new javax.swing.JButton();
        existingEmployeeAgreementRemoveButton = new javax.swing.JButton();
        existingEmployeePersonalDetailsPanel = new javax.swing.JPanel();
        existingEmployeeNICLabel = new javax.swing.JLabel();
        existingEmployeeNICTextField = new javax.swing.JTextField();
        existingEmployeeBirthdayLabel = new javax.swing.JLabel();
        existingEmployeeFirstNameLabel = new javax.swing.JLabel();
        existingEmployeeFirstNameTextField = new javax.swing.JTextField();
        existingEmployeeMiddleNameLabel = new javax.swing.JLabel();
        existingEmployeeMiddleNameTextField = new javax.swing.JTextField();
        existingEmployeeLastNameTextField = new javax.swing.JTextField();
        newEmployeeLastNameLabel1 = new javax.swing.JLabel();
        existingEmployeeGenderLabel = new javax.swing.JLabel();
        existingEmployeeBloodGroupLabel = new javax.swing.JLabel();
        existingEmployeeNationalityLabel = new javax.swing.JLabel();
        existingEmployeeBloodGroupTextField = new javax.swing.JTextField();
        existingEmployeeNationalityTextField = new javax.swing.JTextField();
        existingEmployeeAddressLabel = new javax.swing.JLabel();
        existingEmployeeAddressTextField = new javax.swing.JTextField();
        existingEmployeeMarritalStatusLabel = new javax.swing.JLabel();
        existingEmployeeBirthdayTextField = new javax.swing.JFormattedTextField();
        existingEmployeeMaleRadioButton = new javax.swing.JRadioButton();
        existingEmployeeFemaleRadioButton = new javax.swing.JRadioButton();
        existingEmployeeOtherRadioButton = new javax.swing.JRadioButton();
        existingEmployeeMarriedRadioButton = new javax.swing.JRadioButton();
        existingEmployeeUnmarriedRadioButton = new javax.swing.JRadioButton();
        jobDetailsPanel = new javax.swing.JPanel();
        todayPanel = new javax.swing.JPanel();
        clockedInTextField = new javax.swing.JTextField();
        clockedInLabel = new javax.swing.JLabel();
        clockedOutLabel = new javax.swing.JLabel();
        clockedOutTextField = new javax.swing.JTextField();
        workLocationLabel = new javax.swing.JLabel();
        workLocationTextField = new javax.swing.JTextField();
        workDescriptionLabel = new javax.swing.JLabel();
        workDescriptionTextField = new javax.swing.JTextField();
        commentsLabel = new javax.swing.JLabel();
        commentsTextField = new javax.swing.JTextField();
        uploadDayDetailsButton = new javax.swing.JButton();
        existingEmployeeContactDetailsPanel = new javax.swing.JPanel();
        existingEmployeeContactNumberLabel = new javax.swing.JLabel();
        existingEmployeeContactNumberTextField = new javax.swing.JTextField();
        existingEmployeeEmailLabel = new javax.swing.JLabel();
        existingEmployeeEmailTextField = new javax.swing.JTextField();
        existingEmployeeEmergencyContactNumberLabel = new javax.swing.JLabel();
        existingEmployeeEmergencyContactNumberTextField = new javax.swing.JTextField();
        existingEmployeeEmergencyContactPersonLabel = new javax.swing.JLabel();
        existingEmployeeEmergencyContactPersonTextField = new javax.swing.JTextField();
        existingEmployeeEmergencyContactRelationshipLabel = new javax.swing.JLabel();
        existingEmployeeEmergencyContactRelationshipTextField = new javax.swing.JTextField();
        existingEmployeeCorrespondanceAddressLabel = new javax.swing.JLabel();
        existingEmployeeCorrespondanceAddressTextField = new javax.swing.JTextField();
        updateContactDetailsButton = new javax.swing.JButton();
        workHistoryPanel = new javax.swing.JPanel();
        workHistoryFilterDayLabel = new javax.swing.JLabel();
        filterWorkHistoryButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        workHistoryTable = new javax.swing.JTable();
        updateWorkHistoryRecordButton = new javax.swing.JButton();
        removeWorkHistoryRecordButton = new javax.swing.JButton();
        workHistoryDayLabel = new javax.swing.JLabel();
        workHistoryLocationLabel = new javax.swing.JLabel();
        workHistoryDescriptionLabel = new javax.swing.JLabel();
        workHistoryClockedOutLabel = new javax.swing.JLabel();
        workHistoryClockedInLabel = new javax.swing.JLabel();
        workHistoryClockedInTextField = new javax.swing.JTextField();
        workHistoryClockedOutTextField = new javax.swing.JTextField();
        workHistoryCommentLabel = new javax.swing.JLabel();
        workHistoryLocationTextField = new javax.swing.JTextField();
        workHistoryDescriptionTextField = new javax.swing.JTextField();
        workHistoryCommentTextField = new javax.swing.JTextField();
        filterDateChooser = new com.toedter.calendar.JDateChooser();
        workHistoryDateChooser = new com.toedter.calendar.JDateChooser();
        newEmployeePanel = new javax.swing.JPanel();
        newEmployeeAddButton = new javax.swing.JButton();
        newEmployeePersonalDetailsPanel = new javax.swing.JPanel();
        newEmployeeNICLabel = new javax.swing.JLabel();
        newEmployeeNICTextField = new javax.swing.JTextField();
        newEmployeeBirthdayLabel = new javax.swing.JLabel();
        newEmployeeFirstNameLabel = new javax.swing.JLabel();
        newEmployeeFirstNameTextField = new javax.swing.JTextField();
        newEmployeeMiddleNameLabel = new javax.swing.JLabel();
        newEmployeeMiddleNameTextField = new javax.swing.JTextField();
        newEmployeeLastNameTextField = new javax.swing.JTextField();
        newEmployeeLastNameLabel = new javax.swing.JLabel();
        newEmployeeGenderLabel = new javax.swing.JLabel();
        newEmployeeBloodGroupLabel = new javax.swing.JLabel();
        newEmployeeNationalityLabel = new javax.swing.JLabel();
        newEmployeeBloodGroupTextField = new javax.swing.JTextField();
        newEmployeeNationalityTextField = new javax.swing.JTextField();
        newEmployeeAddressLabel = new javax.swing.JLabel();
        newEmployeeAddressTextField = new javax.swing.JTextField();
        newEmployeeMaleRadioButton = new javax.swing.JRadioButton();
        newEmployeeMarritalStatusLabel = new javax.swing.JLabel();
        newEmployeeMarriedRadioButton = new javax.swing.JRadioButton();
        newEmployeeUnmarriedRadioButton = new javax.swing.JRadioButton();
        newEmployeeFemaleRadioButton = new javax.swing.JRadioButton();
        newEmployeeOtherRadioButton = new javax.swing.JRadioButton();
        newEmployeeBirthdayTextField = new javax.swing.JFormattedTextField();
        newEmployeeContactDetailsPanel = new javax.swing.JPanel();
        newEmployeeContactNumberLabel = new javax.swing.JLabel();
        newEmployeeContactNumberTextField = new javax.swing.JTextField();
        newEmployeeEmailLabel = new javax.swing.JLabel();
        newEmployeeEmailTextField = new javax.swing.JTextField();
        newEmployeeEmergencyContactNumberLabel = new javax.swing.JLabel();
        newEmployeeEmergencyContactNumberTextField = new javax.swing.JTextField();
        newEmployeeEmergencyContactPersonLabel = new javax.swing.JLabel();
        newEmployeeEmergencyContactPersonTextField = new javax.swing.JTextField();
        newEmployeeEmergencyContactRelationshipLabel = new javax.swing.JLabel();
        newEmployeeEmergencyContactRelationshipTextField = new javax.swing.JTextField();
        newEmployeeCorrespondanceAddressLabel = new javax.swing.JLabel();
        newEmployeeCorrespondanceAddressTextField = new javax.swing.JTextField();
        newEmployeeEmploymentDetailsPanel = new javax.swing.JPanel();
        newEmployeeDesignationLabel = new javax.swing.JLabel();
        newEmployeeDesignationTextField = new javax.swing.JTextField();
        newEmployeeSalaryTextField = new javax.swing.JTextField();
        newEmployeeAgreementLabel = new javax.swing.JLabel();
        newEmployeeAgreementUploadButton = new javax.swing.JButton();
        newEmployeeIDLabel = new javax.swing.JLabel();
        newEmployeeIDTextField = new javax.swing.JTextField();
        newEmployeeEmploymentStatusLabel = new javax.swing.JLabel();
        newEmployeeActiveRadioButton = new javax.swing.JRadioButton();
        newEmployeeInactiveRadioButton = new javax.swing.JRadioButton();
        newEmployeeDateOfJoinLabel = new javax.swing.JLabel();
        newEmployeeDateOfJoiningTextField = new javax.swing.JTextField();
        newEmployeeBankAccountNumberLabel = new javax.swing.JLabel();
        newEmployeeBankNumberTextField = new javax.swing.JTextField();
        newEmployeeBankNameLabel = new javax.swing.JLabel();
        newEmployeeBankNameTextField = new javax.swing.JTextField();
        newEmployeeBankBranchLabel = new javax.swing.JLabel();
        newEmployeeBankBranchTextField = new javax.swing.JTextField();
        newEmployeeManagerIDLabel = new javax.swing.JLabel();
        newEmployeeManagerIDTextField = new javax.swing.JTextField();
        newEmployeeAgreementViewButton = new javax.swing.JButton();
        newEmployeeAgreementFileName = new javax.swing.JLabel();
        newEmployeeDapartmentLabel = new javax.swing.JLabel();
        newEmployeeDepartmentTextField = new javax.swing.JTextField();
        newEmployeeQualificationsLabel = new javax.swing.JLabel();
        newEmployeeQualificationsUploadButton = new javax.swing.JButton();
        newEmployeeQualificationsViewButton = new javax.swing.JButton();
        newEmployeeQualificationsFileName = new javax.swing.JLabel();
        newEmployeeOTRateLabel = new javax.swing.JLabel();
        newEmployeeCalculateHourRateTextField = new javax.swing.JTextField();
        newEmployeeOTRateTextField = new javax.swing.JTextField();
        newEmployeeMondayCheckBox = new javax.swing.JCheckBox();
        newEmployeeTuesdayCheckBox = new javax.swing.JCheckBox();
        newEmployeeWednesdayCheckBox = new javax.swing.JCheckBox();
        newEmployeeThursdayCheckBox = new javax.swing.JCheckBox();
        newEmployeeFridayCheckBox = new javax.swing.JCheckBox();
        newEmployeeSaturdayCheckBox = new javax.swing.JCheckBox();
        newEmployeeSundayCheckBox = new javax.swing.JCheckBox();
        newEmployeeWorkWeekLabel = new javax.swing.JLabel();
        newEmployeeWorkHoursPerDayTextField = new javax.swing.JTextField();
        newEmployeeWorkHoursPerDayLabel = new javax.swing.JLabel();
        newEmployeeSalaryLabel = new javax.swing.JLabel();
        newEmployeeCalculateHourRateButton = new javax.swing.JButton();
        newEmployeeQualificationsRemoveButton = new javax.swing.JButton();
        newEmployeeAgreementRemoveButton = new javax.swing.JButton();
        newEmployeeClearFormButton = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(903, 1100));
        setLayout(new java.awt.BorderLayout());

        employeeTabbedPane.setPreferredSize(new java.awt.Dimension(903, 1100));

        existingEmployeePanel.setLayout(new java.awt.BorderLayout());

        searchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        searchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Get all", "ID", " " }));

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Employee Name"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        searchResultsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchResultsTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(searchResultsTable);

        removeEmployeeButton.setText("Remove records of this employee");
        removeEmployeeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeEmployeeButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchBarTextField)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton)
                        .addGap(16, 16, 16))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1261, Short.MAX_VALUE)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeEmployeeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(removeEmployeeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        existingEmployeePanel.add(searchPanel, java.awt.BorderLayout.PAGE_START);

        existingEmployeeEmploymentDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Employment Details"));

        existingEmployeeDesignationLabel.setText("Designation");

        newEmployeeAgreementLabel1.setText("Employment Agreement");

        existingEmployeeAgreementUploadButton.setText("Upload");
        existingEmployeeAgreementUploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingEmployeeAgreementUploadButtonActionPerformed(evt);
            }
        });

        existingEmployeeIDLabel.setText("Employee ID");

        existingEmployeeIDTextField.setEditable(false);

        existingEmployeeEmploymentStatusLabel.setText("Employment status");

        existingEmploymentStatusButtonGroup.add(existingEmployeeActiveRadioButton);
        existingEmployeeActiveRadioButton.setText("Active");

        existingEmploymentStatusButtonGroup.add(existingEmployeeInactiveRadioButton);
        existingEmployeeInactiveRadioButton.setText("Inactive");

        existingEmployeeDateOfJoinLabel.setText("Date of joining");

        existingEmployeeDateOfJoiningTextField.setText("yyyy-mm-dd");

        existingEmployeeBankAccountNumberLabel.setText("Bank Account Number");

        existingEmployeeBankNameLabel.setText("Bank name ");

        existingEmployeeBankBranchLabel.setText("Bank branch");

        existingEmployeeManagerIDLabel.setText("Manager ID");

        existingEmployeeAgreementViewButton.setText("View");
        existingEmployeeAgreementViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingEmployeeAgreementViewButtonActionPerformed(evt);
            }
        });

        existingEmployeeDapartmentLabel.setText("Department");

        existingEmployeeQualificationsLabel.setText("Qualifications");

        existingEmployeeQualificationsUploadButton.setText("Upload");
        existingEmployeeQualificationsUploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingEmployeeQualificationsUploadButtonActionPerformed(evt);
            }
        });

        existingEmployeeQualificationsViewButton.setText("View");
        existingEmployeeQualificationsViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingEmployeeQualificationsViewButtonActionPerformed(evt);
            }
        });

        existingEmployeeOTRateLabel.setText("OT Rate");

        existingEmployeeCalculateHourRateTextField.setEditable(false);

        existingEmployeeMondayCheckBox.setText("Mon");

        existingEmployeeTuesdayCheckBox.setText("Tue");
        existingEmployeeTuesdayCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingEmployeeTuesdayCheckBoxActionPerformed(evt);
            }
        });

        existingEmployeeWednesdayCheckBox.setText("Wed");

        existingEmployeeThursdayCheckBox.setText("Thu");

        existingEmployeeFridayCheckBox.setText("Fri");

        existingEmployeeSaturdayCheckBox.setText("Sat");

        existingEmployeeSundayCheckBox.setText("Sun");

        existingEmployeeWorkWeekLabel.setText("Work Week");

        existingEmployeeWorkHoursPerDayLabel.setText("Work hours per day");

        existingEmployeeSalaryLabel.setText("Salary");

        existingEmployeeCalculateHourRateButton.setText("Calculate Hour Rate");
        existingEmployeeCalculateHourRateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingEmployeeCalculateHourRateButtonActionPerformed(evt);
            }
        });

        existingEmployeeDateOfLeaveLabel.setText("Date of leave");

        existingEmployeeDateOfLeaveTextField.setText("yyyy-mm-dd");

        updateEmploymentDetailsButton.setText("Update Employment Details");
        updateEmploymentDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateEmploymentDetailsButtonActionPerformed(evt);
            }
        });

        existingEmployeeQualificationsRemoveButton.setText("Remove");
        existingEmployeeQualificationsRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingEmployeeQualificationsRemoveButtonActionPerformed(evt);
            }
        });

        existingEmployeeAgreementRemoveButton.setText("Remove");
        existingEmployeeAgreementRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingEmployeeAgreementRemoveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout existingEmployeeEmploymentDetailsPanelLayout = new javax.swing.GroupLayout(existingEmployeeEmploymentDetailsPanel);
        existingEmployeeEmploymentDetailsPanel.setLayout(existingEmployeeEmploymentDetailsPanelLayout);
        existingEmployeeEmploymentDetailsPanelLayout.setHorizontalGroup(
            existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(existingEmployeeDapartmentLabel)
                            .addComponent(existingEmployeeDesignationLabel))
                        .addGap(18, 18, 18)
                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(existingEmployeeDesignationTextField)
                            .addComponent(existingEmployeeDepartmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(261, 261, 261)
                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(existingEmployeeIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(existingEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(existingEmployeeManagerIDLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(existingEmployeeManagerIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(existingEmployeeDateOfJoinLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(existingEmployeeDateOfJoiningTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(existingEmployeeOTRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(existingEmployeeWorkHoursPerDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(existingEmployeeSalaryLabel)
                                    .addComponent(existingEmployeeWorkWeekLabel))
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                                .addComponent(existingEmployeeWorkHoursPerDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                                .addComponent(existingEmployeeSalaryTextField)
                                                .addGap(180, 180, 180))))
                                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                        .addGap(70, 70, 70)
                                        .addComponent(existingEmployeeMondayCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(existingEmployeeTuesdayCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(existingEmployeeWednesdayCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(existingEmployeeThursdayCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(existingEmployeeFridayCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(existingEmployeeSaturdayCheckBox)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(existingEmployeeSundayCheckBox)
                                        .addGap(0, 56, Short.MAX_VALUE))))
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(existingEmployeeBankAccountNumberLabel)
                                    .addComponent(existingEmployeeBankNameLabel)
                                    .addComponent(existingEmployeeBankBranchLabel))
                                .addGap(18, 18, 18)
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(existingEmployeeBankNumberTextField)
                                    .addComponent(existingEmployeeBankNameTextField)
                                    .addComponent(existingEmployeeBankBranchTextField))
                                .addGap(136, 136, 136)))
                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(existingEmployeeCalculateHourRateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(existingEmployeeCalculateHourRateTextField))
                                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                                .addComponent(existingEmployeeQualificationsLabel)
                                                .addGap(44, 44, 44))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                                .addComponent(newEmployeeAgreementLabel1)
                                                .addGap(18, 18, 18)))
                                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(existingEmployeeDateOfLeaveTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 405, Short.MAX_VALUE)
                                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                                .addComponent(existingEmployeeActiveRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(0, 0, Short.MAX_VALUE))
                                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                                .addComponent(existingEmployeeQualificationsUploadButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(existingEmployeeQualificationsFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(existingEmployeeQualificationsViewButton))
                                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                                .addComponent(existingEmployeeAgreementUploadButton)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(existingEmployeeAgreementFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(existingEmployeeAgreementViewButton)))))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(existingEmployeeQualificationsRemoveButton)
                                    .addComponent(existingEmployeeAgreementRemoveButton)))
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(existingEmployeeOTRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(existingEmployeeEmploymentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(104, 104, 104)
                                        .addComponent(existingEmployeeInactiveRadioButton))
                                    .addComponent(existingEmployeeDateOfLeaveLabel))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(updateEmploymentDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        existingEmployeeEmploymentDetailsPanelLayout.setVerticalGroup(
            existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeDapartmentLabel)
                    .addComponent(existingEmployeeDepartmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeIDLabel)
                    .addComponent(existingEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeManagerIDLabel)
                    .addComponent(existingEmployeeManagerIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeDesignationLabel)
                    .addComponent(existingEmployeeDesignationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeDateOfJoinLabel)
                    .addComponent(existingEmployeeDateOfJoiningTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(25, 25, 25)
                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeSundayCheckBox)
                    .addComponent(existingEmployeeSaturdayCheckBox)
                    .addComponent(existingEmployeeFridayCheckBox)
                    .addComponent(existingEmployeeThursdayCheckBox)
                    .addComponent(existingEmployeeWednesdayCheckBox)
                    .addComponent(existingEmployeeTuesdayCheckBox)
                    .addComponent(existingEmployeeMondayCheckBox)
                    .addComponent(existingEmployeeWorkWeekLabel))
                .addGap(18, 18, 18)
                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeOTRateLabel)
                    .addComponent(existingEmployeeOTRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeWorkHoursPerDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeWorkHoursPerDayLabel))
                .addGap(18, 18, 18)
                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeSalaryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeSalaryLabel)
                    .addComponent(existingEmployeeCalculateHourRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeCalculateHourRateButton))
                .addGap(18, 18, 18)
                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(existingEmployeeBankAccountNumberLabel)
                                    .addComponent(existingEmployeeBankNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(existingEmployeeQualificationsLabel)
                                    .addComponent(existingEmployeeQualificationsUploadButton))
                                .addGap(18, 18, 18)
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(existingEmployeeBankNameLabel)
                                    .addComponent(existingEmployeeBankNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(existingEmployeeQualificationsFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(17, 17, 17)
                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(existingEmployeeBankBranchLabel)
                            .addComponent(existingEmployeeBankBranchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(existingEmployeeEmploymentStatusLabel)
                            .addComponent(existingEmployeeActiveRadioButton)
                            .addComponent(existingEmployeeInactiveRadioButton)))
                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(existingEmployeeQualificationsViewButton)
                            .addComponent(existingEmployeeQualificationsRemoveButton))
                        .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(existingEmployeeAgreementViewButton)
                                    .addComponent(existingEmployeeAgreementRemoveButton)))
                            .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addGap(18, 18, 18)
                                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(existingEmployeeAgreementFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(existingEmployeeAgreementUploadButton)
                                        .addComponent(newEmployeeAgreementLabel1)))))))
                .addGap(18, 18, 18)
                .addGroup(existingEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(existingEmployeeDateOfLeaveLabel)
                    .addComponent(existingEmployeeDateOfLeaveTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 247, Short.MAX_VALUE)
                .addComponent(updateEmploymentDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        existingEmployeePersonalDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Details"));
        existingEmployeePersonalDetailsPanel.setPreferredSize(new java.awt.Dimension(300, 252));

        existingEmployeeNICLabel.setText("NIC");

        existingEmployeeBirthdayLabel.setText("Birthday");

        existingEmployeeFirstNameLabel.setText("First");

        existingEmployeeMiddleNameLabel.setText("Middle");

        newEmployeeLastNameLabel1.setText("Last");

        existingEmployeeGenderLabel.setText("Gender");

        existingEmployeeBloodGroupLabel.setText("Blood group");

        existingEmployeeNationalityLabel.setText("Nationality");

        existingEmployeeAddressLabel.setText("Permanant Address");

        existingEmployeeMarritalStatusLabel.setText("Marrital status");

        existingEmployeeBirthdayTextField.setEditable(false);
        existingEmployeeBirthdayTextField.setText("yyyy-mm-dd");

        existingEmployeeGenderButtonGroup.add(existingEmployeeMaleRadioButton);
        existingEmployeeMaleRadioButton.setText("Male");

        existingEmployeeGenderButtonGroup.add(existingEmployeeFemaleRadioButton);
        existingEmployeeFemaleRadioButton.setText("Female");

        existingEmployeeGenderButtonGroup.add(existingEmployeeOtherRadioButton);
        existingEmployeeOtherRadioButton.setText("Other");

        existingEmployeeMaritalStatusButtonGroup.add(existingEmployeeMarriedRadioButton);
        existingEmployeeMarriedRadioButton.setText("Married");

        existingEmployeeMaritalStatusButtonGroup.add(existingEmployeeUnmarriedRadioButton);
        existingEmployeeUnmarriedRadioButton.setText("Unmarried");

        javax.swing.GroupLayout existingEmployeePersonalDetailsPanelLayout = new javax.swing.GroupLayout(existingEmployeePersonalDetailsPanel);
        existingEmployeePersonalDetailsPanel.setLayout(existingEmployeePersonalDetailsPanelLayout);
        existingEmployeePersonalDetailsPanelLayout.setHorizontalGroup(
            existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(existingEmployeeAddressLabel)
                        .addGap(18, 18, 18)
                        .addComponent(existingEmployeeAddressTextField))
                    .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                        .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(existingEmployeeNICLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(existingEmployeeNICTextField))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(existingEmployeeFirstNameLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(existingEmployeeFirstNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                        .addGap(24, 24, 24)
                                        .addComponent(existingEmployeeMiddleNameLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(existingEmployeeMiddleNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                                        .addGap(38, 38, 38)
                                        .addComponent(newEmployeeLastNameLabel1)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(existingEmployeeLastNameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))
                                .addGap(18, 18, 18)
                                .addComponent(existingEmployeeBirthdayLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(existingEmployeeBirthdayTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 264, Short.MAX_VALUE)
                                .addGap(18, 18, 18)
                                .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(existingEmployeeBloodGroupLabel)
                                    .addComponent(existingEmployeeNationalityLabel))
                                .addGap(21, 21, 21))
                            .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(existingEmployeeGenderLabel)
                                .addGap(26, 26, 26)
                                .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                        .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(existingEmployeeOtherRadioButton)
                                            .addComponent(existingEmployeeMaleRadioButton))
                                        .addGap(871, 871, 871))
                                    .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(existingEmployeeFemaleRadioButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(existingEmployeeMarritalStatusLabel)
                                        .addGap(14, 14, 14)))))
                        .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(existingEmployeeNationalityTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                            .addComponent(existingEmployeeBloodGroupTextField)
                            .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(existingEmployeeUnmarriedRadioButton)
                                    .addComponent(existingEmployeeMarriedRadioButton))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        existingEmployeePersonalDetailsPanelLayout.setVerticalGroup(
            existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeNICLabel)
                    .addComponent(existingEmployeeNICTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeBirthdayLabel)
                    .addComponent(existingEmployeeNationalityLabel)
                    .addComponent(existingEmployeeNationalityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeBirthdayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeFirstNameLabel)
                    .addComponent(existingEmployeeFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeMiddleNameLabel)
                    .addComponent(existingEmployeeMiddleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeLastNameLabel1)
                    .addComponent(existingEmployeeBloodGroupLabel)
                    .addComponent(existingEmployeeBloodGroupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addComponent(existingEmployeeGenderLabel))
                    .addGroup(existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(existingEmployeeMaleRadioButton)
                        .addGap(7, 7, 7)
                        .addComponent(existingEmployeeFemaleRadioButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(existingEmployeeOtherRadioButton))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(existingEmployeeMarriedRadioButton)
                            .addComponent(existingEmployeeMarritalStatusLabel))
                        .addGap(7, 7, 7)
                        .addComponent(existingEmployeeUnmarriedRadioButton)))
                .addGap(18, 18, 18)
                .addGroup(existingEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeAddressLabel)
                    .addComponent(existingEmployeeAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout otherDetailsPanelLayout = new javax.swing.GroupLayout(otherDetailsPanel);
        otherDetailsPanel.setLayout(otherDetailsPanelLayout);
        otherDetailsPanelLayout.setHorizontalGroup(
            otherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(existingEmployeeEmploymentDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(existingEmployeePersonalDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 1244, Short.MAX_VALUE)
        );
        otherDetailsPanelLayout.setVerticalGroup(
            otherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, otherDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(existingEmployeePersonalDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(existingEmployeeEmploymentDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        existingEmployeeDetailsTabbedPane.addTab("Other details", otherDetailsPanel);

        todayPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Today"));

        clockedInTextField.setText("hh:mm:ss");

        clockedInLabel.setText("Clock in");

        clockedOutLabel.setText("Clock out");

        clockedOutTextField.setText("hh:mm:ss");

        workLocationLabel.setText("Current Work Location");

        workDescriptionLabel.setText("Current Work Desciption");

        commentsLabel.setText("Comments");

        commentsTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                commentsTextFieldActionPerformed(evt);
            }
        });

        uploadDayDetailsButton.setText("Upload Details");
        uploadDayDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadDayDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout todayPanelLayout = new javax.swing.GroupLayout(todayPanel);
        todayPanel.setLayout(todayPanelLayout);
        todayPanelLayout.setHorizontalGroup(
            todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(todayPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, todayPanelLayout.createSequentialGroup()
                        .addGroup(todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(todayPanelLayout.createSequentialGroup()
                                .addComponent(clockedInLabel)
                                .addGap(18, 18, 18)
                                .addComponent(clockedInTextField)
                                .addGap(75, 75, 75)
                                .addComponent(workLocationLabel)
                                .addGap(28, 28, 28)
                                .addComponent(workLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(todayPanelLayout.createSequentialGroup()
                                .addComponent(clockedOutLabel)
                                .addGap(10, 10, 10)
                                .addComponent(clockedOutTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 182, Short.MAX_VALUE)
                                .addGap(75, 75, 75)
                                .addComponent(workDescriptionLabel)
                                .addGap(18, 18, 18)
                                .addComponent(workDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 170, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(586, 586, 586))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, todayPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(uploadDayDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(todayPanelLayout.createSequentialGroup()
                        .addComponent(commentsLabel)
                        .addGap(83, 83, 83)
                        .addComponent(commentsTextField)))
                .addContainerGap())
        );
        todayPanelLayout.setVerticalGroup(
            todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(todayPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clockedInTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clockedInLabel)
                    .addComponent(workLocationLabel)
                    .addComponent(workLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(clockedOutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(clockedOutLabel)
                    .addComponent(workDescriptionLabel)
                    .addComponent(workDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(todayPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(commentsLabel)
                    .addComponent(commentsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(uploadDayDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        existingEmployeeContactDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Contact Details"));

        existingEmployeeContactNumberLabel.setText("Contact Number");

        existingEmployeeEmailLabel.setText("E-mail (Optional)");

        existingEmployeeEmergencyContactNumberLabel.setText("Emergency contact number");

        existingEmployeeEmergencyContactPersonLabel.setText("Emergency contact person");

        existingEmployeeEmergencyContactRelationshipLabel.setText("Relationship with emergency contact person");

        existingEmployeeCorrespondanceAddressLabel.setText("Correspondance Address");

        updateContactDetailsButton.setText("Update Contact Details");
        updateContactDetailsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateContactDetailsButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout existingEmployeeContactDetailsPanelLayout = new javax.swing.GroupLayout(existingEmployeeContactDetailsPanel);
        existingEmployeeContactDetailsPanel.setLayout(existingEmployeeContactDetailsPanelLayout);
        existingEmployeeContactDetailsPanelLayout.setHorizontalGroup(
            existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(existingEmployeeContactDetailsPanelLayout.createSequentialGroup()
                .addGroup(existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, existingEmployeeContactDetailsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateContactDetailsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(existingEmployeeContactDetailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(existingEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                .addGroup(existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(existingEmployeeEmailLabel)
                                    .addComponent(existingEmployeeContactNumberLabel))
                                .addGap(63, 63, 63)
                                .addGroup(existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(existingEmployeeEmailTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 374, Short.MAX_VALUE)
                                    .addComponent(existingEmployeeContactNumberTextField))
                                .addGap(50, 50, 50)
                                .addGroup(existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(existingEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(existingEmployeeEmergencyContactRelationshipLabel)
                                        .addGap(34, 34, 34)
                                        .addComponent(existingEmployeeEmergencyContactRelationshipTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 375, Short.MAX_VALUE))
                                    .addGroup(existingEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(existingEmployeeEmergencyContactNumberLabel)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(existingEmployeeEmergencyContactNumberTextField))
                                    .addGroup(existingEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(existingEmployeeEmergencyContactPersonLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(existingEmployeeEmergencyContactPersonTextField))))
                            .addGroup(existingEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                .addComponent(existingEmployeeCorrespondanceAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(existingEmployeeCorrespondanceAddressTextField)))))
                .addContainerGap())
        );
        existingEmployeeContactDetailsPanelLayout.setVerticalGroup(
            existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(existingEmployeeContactDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeContactNumberLabel)
                    .addComponent(existingEmployeeContactNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeEmergencyContactNumberLabel)
                    .addComponent(existingEmployeeEmergencyContactNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeEmailLabel)
                    .addComponent(existingEmployeeEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmployeeEmergencyContactPersonLabel)
                    .addComponent(existingEmployeeEmergencyContactPersonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeEmergencyContactRelationshipLabel)
                    .addComponent(existingEmployeeEmergencyContactRelationshipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(existingEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingEmployeeCorrespondanceAddressLabel)
                    .addComponent(existingEmployeeCorrespondanceAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(updateContactDetailsButton)
                .addContainerGap(16, Short.MAX_VALUE))
        );

        workHistoryPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Work History"));

        workHistoryFilterDayLabel.setText("Day");

        filterWorkHistoryButton.setText("Filter");
        filterWorkHistoryButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                filterWorkHistoryButtonActionPerformed(evt);
            }
        });

        workHistoryTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Clocked In", "Clocked Out"
            }
        ));
        workHistoryTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                workHistoryTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(workHistoryTable);

        updateWorkHistoryRecordButton.setText("Update Record");
        updateWorkHistoryRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateWorkHistoryRecordButtonActionPerformed(evt);
            }
        });

        removeWorkHistoryRecordButton.setText("Remove record");
        removeWorkHistoryRecordButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeWorkHistoryRecordButtonActionPerformed(evt);
            }
        });

        workHistoryDayLabel.setText("Day");

        workHistoryLocationLabel.setText("Work Location");

        workHistoryDescriptionLabel.setText("Work Desciption");

        workHistoryClockedOutLabel.setText("Clocked Out");

        workHistoryClockedInLabel.setText("Clocked In");

        workHistoryClockedInTextField.setText("hh:mm:ss");

        workHistoryClockedOutTextField.setText("hh:mm:ss");

        workHistoryCommentLabel.setText("Comments");

        javax.swing.GroupLayout workHistoryPanelLayout = new javax.swing.GroupLayout(workHistoryPanel);
        workHistoryPanel.setLayout(workHistoryPanelLayout);
        workHistoryPanelLayout.setHorizontalGroup(
            workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workHistoryPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addGroup(workHistoryPanelLayout.createSequentialGroup()
                        .addComponent(workHistoryFilterDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(filterDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 550, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(101, 101, 101)
                        .addComponent(filterWorkHistoryButton)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(workHistoryPanelLayout.createSequentialGroup()
                        .addComponent(workHistoryDayLabel)
                        .addGap(44, 44, 44)
                        .addComponent(workHistoryDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 479, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(workHistoryClockedInLabel)
                        .addGap(18, 18, 18)
                        .addComponent(workHistoryClockedInTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(workHistoryClockedOutLabel)
                        .addGap(18, 18, 18)
                        .addComponent(workHistoryClockedOutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(workHistoryPanelLayout.createSequentialGroup()
                        .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(workHistoryLocationLabel)
                            .addComponent(workHistoryCommentLabel)
                            .addComponent(workHistoryDescriptionLabel))
                        .addGap(53, 53, 53)
                        .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(workHistoryLocationTextField)
                            .addComponent(workHistoryDescriptionTextField)
                            .addComponent(workHistoryCommentTextField)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, workHistoryPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateWorkHistoryRecordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(removeWorkHistoryRecordButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        workHistoryPanelLayout.setVerticalGroup(
            workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(workHistoryPanelLayout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(workHistoryFilterDayLabel)
                    .addComponent(filterDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(filterWorkHistoryButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(workHistoryClockedInLabel)
                        .addComponent(workHistoryClockedOutLabel)
                        .addComponent(workHistoryClockedInTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(workHistoryClockedOutTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(workHistoryDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(workHistoryDayLabel))
                .addGap(27, 27, 27)
                .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workHistoryLocationLabel)
                    .addComponent(workHistoryLocationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workHistoryDescriptionLabel)
                    .addComponent(workHistoryDescriptionTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(workHistoryCommentLabel)
                    .addComponent(workHistoryCommentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(workHistoryPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateWorkHistoryRecordButton)
                    .addComponent(removeWorkHistoryRecordButton))
                .addContainerGap(138, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jobDetailsPanelLayout = new javax.swing.GroupLayout(jobDetailsPanel);
        jobDetailsPanel.setLayout(jobDetailsPanelLayout);
        jobDetailsPanelLayout.setHorizontalGroup(
            jobDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(todayPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(existingEmployeeContactDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(workHistoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jobDetailsPanelLayout.setVerticalGroup(
            jobDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jobDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(todayPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(existingEmployeeContactDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(workHistoryPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        existingEmployeeDetailsTabbedPane.addTab("Job details", jobDetailsPanel);

        existingEmployeePanel.add(existingEmployeeDetailsTabbedPane, java.awt.BorderLayout.CENTER);

        employeeTabbedPane.addTab("Existing Employee", existingEmployeePanel);

        newEmployeeAddButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/add.png"))); // NOI18N
        newEmployeeAddButton.setText("Add New Employee");
        newEmployeeAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeAddButtonActionPerformed(evt);
            }
        });

        newEmployeePersonalDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Personal Details"));

        newEmployeeNICLabel.setText("NIC");

        newEmployeeBirthdayLabel.setText("Birthday");

        newEmployeeFirstNameLabel.setText("First");

        newEmployeeMiddleNameLabel.setText("Middle");

        newEmployeeLastNameLabel.setText("Last");

        newEmployeeGenderLabel.setText("Gender");

        newEmployeeBloodGroupLabel.setText("Blood group");

        newEmployeeNationalityLabel.setText("Nationality");

        newEmployeeAddressLabel.setText("Permanant Address");

        genderButtonGroup.add(newEmployeeMaleRadioButton);
        newEmployeeMaleRadioButton.setText("Male");

        newEmployeeMarritalStatusLabel.setText("Marrital status");

        maritalStatusButtonGroup.add(newEmployeeMarriedRadioButton);
        newEmployeeMarriedRadioButton.setText("Married");

        maritalStatusButtonGroup.add(newEmployeeUnmarriedRadioButton);
        newEmployeeUnmarriedRadioButton.setText("Unmarried");

        genderButtonGroup.add(newEmployeeFemaleRadioButton);
        newEmployeeFemaleRadioButton.setText("Female");

        genderButtonGroup.add(newEmployeeOtherRadioButton);
        newEmployeeOtherRadioButton.setText("Other");

        newEmployeeBirthdayTextField.setText("dd/mm/yyyy");

        javax.swing.GroupLayout newEmployeePersonalDetailsPanelLayout = new javax.swing.GroupLayout(newEmployeePersonalDetailsPanel);
        newEmployeePersonalDetailsPanel.setLayout(newEmployeePersonalDetailsPanelLayout);
        newEmployeePersonalDetailsPanelLayout.setHorizontalGroup(
            newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                        .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeNICLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newEmployeeNICTextField))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeFirstNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newEmployeeFirstNameTextField)
                                .addGap(24, 24, 24)
                                .addComponent(newEmployeeMiddleNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newEmployeeMiddleNameTextField)
                                .addGap(38, 38, 38)
                                .addComponent(newEmployeeLastNameLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEmployeeLastNameTextField)))
                        .addGap(18, 18, 18)
                        .addComponent(newEmployeeBirthdayLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(newEmployeeBirthdayTextField)
                        .addGap(18, 18, 18)
                        .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeNationalityLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newEmployeeNationalityTextField))
                            .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeBloodGroupLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newEmployeeBloodGroupTextField))
                            .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeMarritalStatusLabel)
                                .addGap(18, 18, 18)
                                .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newEmployeeUnmarriedRadioButton)
                                    .addComponent(newEmployeeMarriedRadioButton))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newEmployeeGenderLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newEmployeeOtherRadioButton)
                            .addComponent(newEmployeeFemaleRadioButton)
                            .addComponent(newEmployeeMaleRadioButton))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newEmployeeAddressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newEmployeeAddressTextField)))
                .addContainerGap())
        );
        newEmployeePersonalDetailsPanelLayout.setVerticalGroup(
            newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newEmployeePersonalDetailsPanelLayout.createSequentialGroup()
                        .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newEmployeeNICLabel)
                            .addComponent(newEmployeeNICTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newEmployeeBirthdayLabel)
                            .addComponent(newEmployeeNationalityLabel)
                            .addComponent(newEmployeeNationalityTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newEmployeeBirthdayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newEmployeeFirstNameLabel)
                            .addComponent(newEmployeeFirstNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newEmployeeMiddleNameLabel)
                            .addComponent(newEmployeeMiddleNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newEmployeeLastNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newEmployeeLastNameLabel)
                            .addComponent(newEmployeeBloodGroupLabel)
                            .addComponent(newEmployeeBloodGroupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24)
                        .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newEmployeeGenderLabel)
                            .addComponent(newEmployeeMaleRadioButton)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newEmployeeMarritalStatusLabel)
                        .addComponent(newEmployeeMarriedRadioButton)))
                .addGap(7, 7, 7)
                .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeUnmarriedRadioButton)
                    .addComponent(newEmployeeFemaleRadioButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newEmployeeOtherRadioButton)
                .addGap(18, 18, 18)
                .addGroup(newEmployeePersonalDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeAddressLabel)
                    .addComponent(newEmployeeAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        newEmployeeContactDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Contact Details"));

        newEmployeeContactNumberLabel.setText("Contact Number");

        newEmployeeEmailLabel.setText("E-mail (Optional)");

        newEmployeeEmergencyContactNumberLabel.setText("Emergency contact number");

        newEmployeeEmergencyContactPersonLabel.setText("Emergency contact person");

        newEmployeeEmergencyContactRelationshipLabel.setText("Relationship with emergency contact person");

        newEmployeeCorrespondanceAddressLabel.setText("Correspondance Address");

        javax.swing.GroupLayout newEmployeeContactDetailsPanelLayout = new javax.swing.GroupLayout(newEmployeeContactDetailsPanel);
        newEmployeeContactDetailsPanel.setLayout(newEmployeeContactDetailsPanelLayout);
        newEmployeeContactDetailsPanelLayout.setHorizontalGroup(
            newEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newEmployeeContactDetailsPanelLayout.createSequentialGroup()
                .addGroup(newEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newEmployeeContactDetailsPanelLayout.createSequentialGroup()
                        .addGroup(newEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeEmailLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newEmployeeEmailTextField))
                            .addGroup(newEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeContactNumberLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newEmployeeContactNumberTextField)))
                        .addGap(101, 101, 101)
                        .addGroup(newEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeEmergencyContactRelationshipLabel)
                                .addGap(34, 34, 34)
                                .addComponent(newEmployeeEmergencyContactRelationshipTextField))
                            .addGroup(newEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeEmergencyContactNumberLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newEmployeeEmergencyContactNumberTextField))
                            .addGroup(newEmployeeContactDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeEmergencyContactPersonLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newEmployeeEmergencyContactPersonTextField))))
                    .addGroup(newEmployeeContactDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newEmployeeCorrespondanceAddressLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newEmployeeCorrespondanceAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 1068, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        newEmployeeContactDetailsPanelLayout.setVerticalGroup(
            newEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newEmployeeContactDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeContactNumberLabel)
                    .addComponent(newEmployeeContactNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeEmergencyContactNumberLabel)
                    .addComponent(newEmployeeEmergencyContactNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeEmailLabel)
                    .addComponent(newEmployeeEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeEmergencyContactPersonLabel)
                    .addComponent(newEmployeeEmergencyContactPersonTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeEmergencyContactRelationshipLabel)
                    .addComponent(newEmployeeEmergencyContactRelationshipTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newEmployeeContactDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeCorrespondanceAddressLabel)
                    .addComponent(newEmployeeCorrespondanceAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(23, Short.MAX_VALUE))
        );

        newEmployeeEmploymentDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Employment Details"));

        newEmployeeDesignationLabel.setText("Designation");

        newEmployeeAgreementLabel.setText("Employment Agreement");

        newEmployeeAgreementUploadButton.setText("Upload");
        newEmployeeAgreementUploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeAgreementUploadButtonActionPerformed(evt);
            }
        });

        newEmployeeIDLabel.setText("Employee ID");

        newEmployeeIDTextField.setEditable(false);

        newEmployeeEmploymentStatusLabel.setText("Employment status");

        employmentStatusButtonGroup.add(newEmployeeActiveRadioButton);
        newEmployeeActiveRadioButton.setText("Active");

        employmentStatusButtonGroup.add(newEmployeeInactiveRadioButton);
        newEmployeeInactiveRadioButton.setText("Inactive");

        newEmployeeDateOfJoinLabel.setText("Date of joining");

        newEmployeeBankAccountNumberLabel.setText("Bank Account Number");

        newEmployeeBankNameLabel.setText("Bank name ");

        newEmployeeBankBranchLabel.setText("Bank branch");

        newEmployeeManagerIDLabel.setText("Manager ID");

        newEmployeeAgreementViewButton.setText("View");
        newEmployeeAgreementViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeAgreementViewButtonActionPerformed(evt);
            }
        });

        newEmployeeDapartmentLabel.setText("Department");

        newEmployeeQualificationsLabel.setText("Qualifications");

        newEmployeeQualificationsUploadButton.setText("Upload");
        newEmployeeQualificationsUploadButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeQualificationsUploadButtonActionPerformed(evt);
            }
        });

        newEmployeeQualificationsViewButton.setText("View");
        newEmployeeQualificationsViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeQualificationsViewButtonActionPerformed(evt);
            }
        });

        newEmployeeOTRateLabel.setText("OT Rate");

        newEmployeeCalculateHourRateTextField.setEditable(false);

        newEmployeeMondayCheckBox.setText("Mon");

        newEmployeeTuesdayCheckBox.setText("Tue");
        newEmployeeTuesdayCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeTuesdayCheckBoxActionPerformed(evt);
            }
        });

        newEmployeeWednesdayCheckBox.setText("Wed");

        newEmployeeThursdayCheckBox.setText("Thu");

        newEmployeeFridayCheckBox.setText("Fri");

        newEmployeeSaturdayCheckBox.setText("Sat");

        newEmployeeSundayCheckBox.setText("Sun");

        newEmployeeWorkWeekLabel.setText("Work Week");

        newEmployeeWorkHoursPerDayLabel.setText("Work hours per day");

        newEmployeeSalaryLabel.setText("Salary");

        newEmployeeCalculateHourRateButton.setText("Calculate Hour Rate");
        newEmployeeCalculateHourRateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeCalculateHourRateButtonActionPerformed(evt);
            }
        });

        newEmployeeQualificationsRemoveButton.setText("Remove");
        newEmployeeQualificationsRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeQualificationsRemoveButtonActionPerformed(evt);
            }
        });

        newEmployeeAgreementRemoveButton.setText("Remove");
        newEmployeeAgreementRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeAgreementRemoveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newEmployeeEmploymentDetailsPanelLayout = new javax.swing.GroupLayout(newEmployeeEmploymentDetailsPanel);
        newEmployeeEmploymentDetailsPanel.setLayout(newEmployeeEmploymentDetailsPanelLayout);
        newEmployeeEmploymentDetailsPanelLayout.setHorizontalGroup(
            newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(newEmployeeDapartmentLabel)
                    .addComponent(newEmployeeDesignationLabel))
                .addGap(18, 18, 18)
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(newEmployeeDesignationTextField)
                    .addComponent(newEmployeeDepartmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(261, 261, 261)
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newEmployeeIDLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newEmployeeManagerIDLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newEmployeeManagerIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newEmployeeDateOfJoinLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newEmployeeDateOfJoiningTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(newEmployeeOTRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 344, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
            .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newEmployeeBankAccountNumberLabel)
                            .addComponent(newEmployeeBankNameLabel)
                            .addComponent(newEmployeeBankBranchLabel))
                        .addGap(18, 18, 18)
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newEmployeeBankBranchTextField)
                            .addComponent(newEmployeeBankNumberTextField)
                            .addComponent(newEmployeeBankNameTextField, javax.swing.GroupLayout.Alignment.TRAILING))
                        .addGap(84, 84, 84)
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newEmployeeQualificationsLabel)
                            .addComponent(newEmployeeAgreementLabel)
                            .addComponent(newEmployeeEmploymentStatusLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newEmployeeWorkHoursPerDayLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newEmployeeSalaryLabel)
                            .addComponent(newEmployeeWorkWeekLabel))
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(newEmployeeWorkHoursPerDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                        .addComponent(newEmployeeSalaryTextField)
                                        .addGap(180, 180, 180))))
                            .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addGap(70, 70, 70)
                                .addComponent(newEmployeeMondayCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEmployeeTuesdayCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEmployeeWednesdayCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEmployeeThursdayCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEmployeeFridayCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEmployeeSaturdayCheckBox)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newEmployeeSundayCheckBox)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newEmployeeCalculateHourRateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newEmployeeCalculateHourRateTextField))
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(newEmployeeAgreementUploadButton)
                            .addComponent(newEmployeeQualificationsUploadButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newEmployeeAgreementFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(newEmployeeQualificationsFileName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeQualificationsViewButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newEmployeeQualificationsRemoveButton))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newEmployeeAgreementViewButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newEmployeeAgreementRemoveButton)))
                        .addContainerGap())
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                                .addGap(47, 47, 47)
                                .addComponent(newEmployeeActiveRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(newEmployeeInactiveRadioButton))
                            .addComponent(newEmployeeOTRateLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        newEmployeeEmploymentDetailsPanelLayout.setVerticalGroup(
            newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeDapartmentLabel)
                    .addComponent(newEmployeeDepartmentTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeIDLabel)
                    .addComponent(newEmployeeIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeManagerIDLabel)
                    .addComponent(newEmployeeManagerIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(17, 17, 17)
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeDateOfJoinLabel)
                    .addComponent(newEmployeeDateOfJoiningTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeDesignationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeDesignationLabel))
                .addGap(25, 25, 25)
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeSundayCheckBox)
                    .addComponent(newEmployeeSaturdayCheckBox)
                    .addComponent(newEmployeeFridayCheckBox)
                    .addComponent(newEmployeeThursdayCheckBox)
                    .addComponent(newEmployeeWednesdayCheckBox)
                    .addComponent(newEmployeeTuesdayCheckBox)
                    .addComponent(newEmployeeMondayCheckBox)
                    .addComponent(newEmployeeWorkWeekLabel))
                .addGap(18, 18, 18)
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeOTRateLabel)
                    .addComponent(newEmployeeOTRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeWorkHoursPerDayTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeWorkHoursPerDayLabel))
                .addGap(18, 18, 18)
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeSalaryTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeSalaryLabel)
                    .addComponent(newEmployeeCalculateHourRateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeCalculateHourRateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 237, Short.MAX_VALUE)
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newEmployeeBankAccountNumberLabel)
                        .addComponent(newEmployeeBankNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newEmployeeQualificationsLabel)
                        .addComponent(newEmployeeQualificationsUploadButton))
                    .addComponent(newEmployeeQualificationsFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newEmployeeQualificationsViewButton)
                        .addComponent(newEmployeeQualificationsRemoveButton)))
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGap(21, 21, 21)
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newEmployeeBankNameLabel)
                            .addComponent(newEmployeeBankNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newEmployeeAgreementFileName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(newEmployeeAgreementLabel)
                                .addComponent(newEmployeeAgreementUploadButton))
                            .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(newEmployeeAgreementRemoveButton)
                                .addComponent(newEmployeeAgreementViewButton)))))
                .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newEmployeeEmploymentStatusLabel)
                            .addComponent(newEmployeeActiveRadioButton)
                            .addComponent(newEmployeeInactiveRadioButton)))
                    .addGroup(newEmployeeEmploymentDetailsPanelLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(newEmployeeEmploymentDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newEmployeeBankBranchLabel)
                            .addComponent(newEmployeeBankBranchTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(25, 25, 25))
        );

        newEmployeeClearFormButton.setText("Clear The Form");
        newEmployeeClearFormButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newEmployeeClearFormButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newEmployeePanelLayout = new javax.swing.GroupLayout(newEmployeePanel);
        newEmployeePanel.setLayout(newEmployeePanelLayout);
        newEmployeePanelLayout.setHorizontalGroup(
            newEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newEmployeePersonalDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(newEmployeeEmploymentDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(newEmployeeContactDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newEmployeePanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(newEmployeeClearFormButton, javax.swing.GroupLayout.PREFERRED_SIZE, 208, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(newEmployeeAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        newEmployeePanelLayout.setVerticalGroup(
            newEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newEmployeePanelLayout.createSequentialGroup()
                .addComponent(newEmployeePersonalDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newEmployeeContactDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newEmployeeEmploymentDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(newEmployeePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newEmployeeClearFormButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newEmployeeAddButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        employeeTabbedPane.addTab("New Employee", newEmployeePanel);

        add(employeeTabbedPane, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents
    
    public boolean validateTime(final String time){
        matcher = pattern.matcher(time);
        return matcher.matches();
    }
    
    public void newEmployeePanelVisibility(boolean isVisible){
        employeeTabbedPane.add(newEmployeePanel,"New Employee");
        generateNewEmployeeID();
    }
    
    public void existingEmployeePanelVisibility(boolean isVisible){
        employeeTabbedPane.add(existingEmployeePanel,"Existing Employee");
    }
    
    public void jobDetailsPanelVisibility(boolean isVisible){
        existingEmployeeDetailsTabbedPane.add(jobDetailsPanel,"Job details");
    }
    
    public void otherDetailsPanelVisibility(boolean isVisible){
        existingEmployeeDetailsTabbedPane.add(otherDetailsPanel,"Other details");
    }
    
    private void generateNewEmployeeID(){
        Random r=new Random();
        String code=null;
        do{
            try {
                int x=r.nextInt(26)+65;
                char ch='E';
                int z=r.nextInt(1000);
                switch(String.valueOf(z).length()){
                    case 1:code=ch+"00"+z;break;
                    case 2:code=ch+"0"+z ;break;
                    case 3:code=ch+""+z  ;break;
                }
                String[] atr = new EmployeeController().getAllEmployeeIDs(DBconnection.getUsername());//riscy code. throw an sql exception when connection fails.
                for(String y:atr){
                    if(y==code){
                        code=null;
                    }
                }
            } catch (Exception ex) {
                ex.printStackTrace();
            }
        }while(code==null);
	newEmployeeIDTextField.setText(code);
    }

    private void newEmployeeClearFormButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeClearFormButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Are you sure to clear the form ?");
        if(showConfirmDialog!=0){return;}
        newEmployeeNICTextField.setText("");
        newEmployeeFirstNameTextField.setText("");
        newEmployeeMiddleNameTextField.setText("");
        newEmployeeLastNameTextField.setText("");
        newEmployeeBirthdayTextField.setText("dd/mm/yyyy");
        newEmployeeNationalityTextField.setText("");
        newEmployeeBloodGroupTextField.setText("");
        maritalStatusButtonGroup.clearSelection();
        genderButtonGroup.clearSelection();
        newEmployeeAddressTextField.setText("");
        newEmployeeContactNumberTextField.setText("");
        newEmployeeEmergencyContactNumberTextField.setText("");
        newEmployeeEmergencyContactPersonTextField.setText("");
        newEmployeeEmergencyContactRelationshipTextField.setText("");
        newEmployeeCorrespondanceAddressTextField.setText("");
        newEmployeeEmailTextField.setText("");
        newEmployeeDepartmentTextField.setText("");
        newEmployeeDesignationTextField.setText("");
        newEmployeeSalaryTextField.setText("");
        newEmployeeOTRateTextField.setText("");
        newEmployeeCalculateHourRateTextField.setText("");
        employmentStatusButtonGroup.clearSelection();
        newEmployeeDateOfJoiningTextField.setText("");
        newEmployeeManagerIDTextField.setText("");
        newEmployeeBankNumberTextField.setText("");
        newEmployeeBankNameTextField.setText("");
        newEmployeeBankBranchTextField.setText("");
        newEmployeeAgreementFileName.setText("");
        newEmployeeQualificationsFileName.setText("");
        newEmployeeWorkHoursPerDayTextField.setText("");
        qualifications=null;
        employmentAgreement=null;
        newEmployeeMondayCheckBox.setSelected(false);
        newEmployeeTuesdayCheckBox.setSelected(false);
        newEmployeeWednesdayCheckBox.setSelected(false);
        newEmployeeThursdayCheckBox.setSelected(false);
        newEmployeeFridayCheckBox.setSelected(false);
        newEmployeeSaturdayCheckBox.setSelected(false);
        newEmployeeSundayCheckBox.setSelected(false);
    }//GEN-LAST:event_newEmployeeClearFormButtonActionPerformed
    
    private boolean validateJobDetails(){
        return true;
    }
    
    private boolean validateOtherDetails(){
        return true;
    }
    
    private boolean validateNewEmployeeForm(){
        nic=newEmployeeNICTextField.getText();
        firstName=newEmployeeFirstNameTextField.getText();
        middleName=newEmployeeMiddleNameTextField.getText();
        lastName=newEmployeeLastNameTextField.getText();
        birthday=newEmployeeBirthdayTextField.getText();
        nationality=newEmployeeNationalityTextField.getText();
        bloodGroup=newEmployeeBloodGroupTextField.getText();
        maritalStatus = getSelectedButtonText(maritalStatusButtonGroup).equals("Married");
        gender= getSelectedButtonText(genderButtonGroup);
        permanantAddress=newEmployeeAddressTextField.getText();
        contactNumber=newEmployeeContactNumberTextField.getText();
        emergencyContactNumber=newEmployeeEmergencyContactNumberTextField.getText();
        emergencyContactPerson=newEmployeeEmergencyContactPersonTextField.getText();
        relationshipWithEmergencyContactPerson=newEmployeeEmergencyContactRelationshipTextField.getText();
        email=newEmployeeEmailTextField.getText();
        department=newEmployeeDepartmentTextField.getText();
        designation=newEmployeeDesignationTextField.getText();
        salary= Double.parseDouble(newEmployeeSalaryTextField.getText());
        otrate= Double.parseDouble(newEmployeeOTRateTextField.getText());
        hpd= Double.parseDouble(newEmployeeWorkHoursPerDayTextField.getText());
        employmentStatus=getSelectedButtonText(employmentStatusButtonGroup).equals("Active");
        dateOfJoining=newEmployeeDateOfJoiningTextField.getText();
        managerID=newEmployeeManagerIDTextField.getText();
        employeeID=newEmployeeIDTextField.getText();
        bankAccountNumber=newEmployeeBankNumberTextField.getText();
        bankName=newEmployeeBankNameTextField.getText();
        bankBranch=newEmployeeBankBranchTextField.getText();
        addressForCorrespondance=newEmployeeCorrespondanceAddressTextField.getText();
        
        
        /* ADD VALIDATION CODE HERE */
        
        return true;
    }
    
    private String getSelectedButtonText(ButtonGroup buttonGroup) {
        for (Enumeration<AbstractButton> buttons = buttonGroup.getElements(); buttons.hasMoreElements();) {
            AbstractButton button = buttons.nextElement();

            if (button.isSelected()) {
                return button.getText();
            }
        }

        return null;
    }
    
    private void newEmployeeAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeAddButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Add this employee?");
        if(showConfirmDialog!=0){return;}
        if(validateNewEmployeeForm()==false)return;
        EmployeeDTO newEmployee= new EmployeeDTO(nic,  birthday,  nationality,
            firstName,  middleName, lastName,
             bloodGroup,  gender,  permanantAddress,
             addressForCorrespondance,  contactNumber,  email,
             emergencyContactNumber,  emergencyContactPerson,
             relationshipWithEmergencyContactPerson,  department, 
             designation,  employeeID,  managerID,
             dateOfJoining,  bankAccountNumber,  bankName, 
             bankBranch,  maritalStatus,  employmentStatus,
             salary, otrate , hpd , getNewEmployeeWorkWeek(),  qualifications,  employmentAgreement);
        if(controller.addNewEmployee(newEmployee)){
            JOptionPane.showMessageDialog(this, "Employee added");
            generateNewEmployeeID();
        }else{
            JOptionPane.showMessageDialog(this, "Failed to add employee");
        }
        
    }//GEN-LAST:event_newEmployeeAddButtonActionPerformed
    
    private boolean validateExistingEmploymentDetailsForm(){
        existingnic=existingEmployeeNICTextField.getText();
        existingfirstName=existingEmployeeFirstNameTextField.getText();
        existingmiddleName=existingEmployeeMiddleNameTextField.getText();
        existinglastName=existingEmployeeLastNameTextField.getText();
        existingbirthday=existingEmployeeBirthdayTextField.getText();
        existingnationality=existingEmployeeNationalityTextField.getText();
        existingbloodGroup=existingEmployeeBloodGroupTextField.getText();
        existingmaritalStatus = getSelectedButtonText(existingEmployeeMaritalStatusButtonGroup).equals("Married");
        existinggender= getSelectedButtonText(existingEmployeeGenderButtonGroup);
        existingpermanantAddress=existingEmployeeAddressTextField.getText();
        existingemail=existingEmployeeEmailTextField.getText();
        existingdepartment=existingEmployeeDepartmentTextField.getText();
        existingdesignation=existingEmployeeDesignationTextField.getText();
        existingsalary= Double.parseDouble(existingEmployeeSalaryTextField.getText());
        existingotrate= Double.parseDouble(existingEmployeeOTRateTextField.getText());
        existinghpd= Double.parseDouble(existingEmployeeWorkHoursPerDayTextField.getText());
        existingemploymentStatus=getSelectedButtonText(existingEmploymentStatusButtonGroup).equals("Active");
        existingdateOfJoining=existingEmployeeDateOfJoiningTextField.getText();
        existingmanagerID=existingEmployeeManagerIDTextField.getText();
        existingemployeeID=existingEmployeeIDTextField.getText();
        existingbankAccountNumber=existingEmployeeBankNumberTextField.getText();
        existingbankName=existingEmployeeBankNameTextField.getText();
        existingbankBranch=existingEmployeeBankBranchTextField.getText();
        return true;
    }
    
    private boolean validateExistingContactDetails(){
        existingcontactNumber=newEmployeeContactNumberTextField.getText();
        existingemergencyContactNumber=existingEmployeeEmergencyContactNumberTextField.getText();
        existingemergencyContactPerson=existingEmployeeEmergencyContactPersonTextField.getText();
        existingrelationshipWithEmergencyContactPerson=existingEmployeeEmergencyContactRelationshipTextField.getText();
        existingemail=existingEmployeeEmailTextField.getText();
        existingaddressForCorrespondance=existingEmployeeCorrespondanceAddressTextField.getText();
        return true;
    }
    
    private void updateEmploymentDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateEmploymentDetailsButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Update this employee?");
        if(showConfirmDialog!=0){return;}
        if(validateExistingEmploymentDetailsForm()==false)return;
        EmployeeDTO newEmployee= new EmployeeDTO( existingnic,   existingbirthday,   existingnationality,
             existingfirstName,   existingmiddleName,  existinglastName,
              existingbloodGroup,   existinggender,   existingpermanantAddress,
              existingdepartment, 
              existingdesignation,   existingemployeeID,   existingmanagerID,
              existingdateOfJoining,   existingbankAccountNumber,   existingbankName, 
              existingbankBranch,   existingmaritalStatus,   existingemploymentStatus,
              existingsalary,  existingotrate ,  existinghpd , getExistingEmployeeWorkWeek(),  existingQualifications,   existingEmploymentAgreement, existingclockedIn, existingdateOfLeaving);
        if(controller.updateEmployeePersonalAndEmploymentDetails(newEmployee)){
            JOptionPane.showMessageDialog(this, "Employee details updated");
        }else{
            JOptionPane.showMessageDialog(this, "Failed to update employee details");
        }
    }//GEN-LAST:event_updateEmploymentDetailsButtonActionPerformed

    private void newEmployeeTuesdayCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeTuesdayCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newEmployeeTuesdayCheckBoxActionPerformed

    private void newEmployeeQualificationsViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeQualificationsViewButtonActionPerformed
        if(employmentAgreement==null){
            JOptionPane.showMessageDialog(this, "Upload qulifications file Before Viewing");
            return;
        }
        if(!Desktop.isDesktopSupported())//check if Desktop is supported by Platform or not
        {
            JOptionPane.showMessageDialog(this, "View Feature Not Supported");
            return;
        }
        Desktop desktop = Desktop.getDesktop();
        if(qualifications.exists()){ //checks file exists or not
            try {
                desktop.open(qualifications);//opens the specified file
            } catch (IOException ex) {
                Logger.getLogger(EmployeesPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this, "File Does Not Exist");
        }
    }//GEN-LAST:event_newEmployeeQualificationsViewButtonActionPerformed

    private void newEmployeeQualificationsUploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeQualificationsUploadButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showDialog(this,"Upload");
        if(returnVal==0){ //If file selected 0, otherwise 1
            qualifications = fc.getSelectedFile();
            newEmployeeQualificationsFileName.setText(qualifications.getName());
        }
    }//GEN-LAST:event_newEmployeeQualificationsUploadButtonActionPerformed

    private void newEmployeeAgreementViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeAgreementViewButtonActionPerformed
        if(employmentAgreement==null){
            JOptionPane.showMessageDialog(this, "Upload Agreement Before Viewing");
            return;
        }
        if(!Desktop.isDesktopSupported())//check if Desktop is supported by Platform or not
        {
            JOptionPane.showMessageDialog(this, "View Feature Not Supported");
            return;
        }
        Desktop desktop = Desktop.getDesktop();
        if(employmentAgreement.exists()){ //checks file exists or not
            try {
                desktop.open(employmentAgreement);//opens the specified file
            } catch (IOException ex) {
                Logger.getLogger(EmployeesPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this, "File Does Not Exist");
        }
    }//GEN-LAST:event_newEmployeeAgreementViewButtonActionPerformed

    private void newEmployeeAgreementUploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeAgreementUploadButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showDialog(this,"Upload");
        if(returnVal==0){ //If file selected 0, otherwise 1
            employmentAgreement = fc.getSelectedFile();
            newEmployeeAgreementFileName.setText(employmentAgreement.getName());
        }
    }//GEN-LAST:event_newEmployeeAgreementUploadButtonActionPerformed

    private void newEmployeeCalculateHourRateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeCalculateHourRateButtonActionPerformed
        double hpd=Double.parseDouble(newEmployeeWorkHoursPerDayTextField.getText());
        double salary=Double.parseDouble(newEmployeeSalaryTextField.getText());
        int daysWorked= getNewEmployeeWorkWeek().size();
        double hourRate = salary/(daysWorked*hpd*3.8720238095);
        newEmployeeCalculateHourRateTextField.setText(""+hourRate);
    }//GEN-LAST:event_newEmployeeCalculateHourRateButtonActionPerformed

    private void commentsTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_commentsTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_commentsTextFieldActionPerformed

    private void uploadDayDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadDayDetailsButtonActionPerformed

        String ID=String.valueOf(searchResultsTable.getValueAt(searchResultsTable.getSelectedRow(), 0));
        LocalDate today=LocalDate.now();
        String clockedInString=clockedInTextField.getText();
        LocalTime clockedIn=null;
        
        
        String clockedOutString=clockedOutTextField.getText();
        LocalTime clockedOut=null;
        if(validateTime(clockedInString)){
            clockedIn=LocalTime.parse(clockedInString, DateTimeFormatter.ofPattern("HH:mm:ss"));
            controller.updateEmployeeAttendance(existingemployeeID,true);
        }
        else if(clockedInString.strip().length()>0){
            JOptionPane.showMessageDialog(this, "Please enter a time in the format HH:mm:ss");
            return;
        }
        if(validateTime(clockedOutString)){
            clockedOut=LocalTime.parse(clockedOutString, DateTimeFormatter.ofPattern("HH:mm:ss"));
            controller.updateEmployeeAttendance(existingemployeeID,false);
        }
        else if(clockedOutString.strip().length()>0){
            JOptionPane.showMessageDialog(this, "Please enter a time in the format HH:mm:ss");
            return;
        }
        
        String workLocation= workLocationTextField.getText();
        String workDescription= workDescriptionTextField.getText();
        String comment= commentsTextField.getText();
        boolean result=controller.addWorkRecord(new WorkRecordDTO(today,ID,clockedIn,clockedOut,workLocation,workDescription,comment));
        if(result){
            JOptionPane.showMessageDialog(this,"Work upload successful");
        }else{
            JOptionPane.showMessageDialog(this,"Work upload failed");
        }
    }//GEN-LAST:event_uploadDayDetailsButtonActionPerformed

    private void existingEmployeeAgreementUploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingEmployeeAgreementUploadButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showDialog(this,"Upload");
        if(returnVal==0){ //If file selected 0, otherwise 1
            existingEmploymentAgreement = fc.getSelectedFile();
            existingEmployeeAgreementFileName.setText(existingEmploymentAgreement.getName());
        }
    }//GEN-LAST:event_existingEmployeeAgreementUploadButtonActionPerformed

    private void existingEmployeeAgreementViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingEmployeeAgreementViewButtonActionPerformed
        if(existingEmploymentAgreement==null){
            JOptionPane.showMessageDialog(this, "Upload qulifications file Before Viewing");
            return;
        }
        if(!Desktop.isDesktopSupported())//check if Desktop is supported by Platform or not
        {
            JOptionPane.showMessageDialog(this, "View Feature Not Supported");
            return;
        }
        Desktop desktop = Desktop.getDesktop();
        if(existingEmploymentAgreement.exists()){ //checks file exists or not
            try {
                desktop.open(existingEmploymentAgreement);//opens the specified file
            } catch (IOException ex) {
                Logger.getLogger(EmployeesPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this, "File Does Not Exist");
        }
    }//GEN-LAST:event_existingEmployeeAgreementViewButtonActionPerformed

    private void existingEmployeeQualificationsUploadButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingEmployeeQualificationsUploadButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showDialog(this,"Upload");
        if(returnVal==0){ //If file selected 0, otherwise 1
            existingQualifications = fc.getSelectedFile();
            existingEmployeeQualificationsFileName.setText(existingQualifications.getName());
        }
    }//GEN-LAST:event_existingEmployeeQualificationsUploadButtonActionPerformed

    private void existingEmployeeQualificationsViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingEmployeeQualificationsViewButtonActionPerformed
         if(existingQualifications==null){
            JOptionPane.showMessageDialog(this, "Upload qulifications file Before Viewing");
            return;
        }
        if(!Desktop.isDesktopSupported())//check if Desktop is supported by Platform or not
        {
            JOptionPane.showMessageDialog(this, "View Feature Not Supported");
            return;
        }
        Desktop desktop = Desktop.getDesktop();
        if(existingQualifications.exists()){ //checks file exists or not
            try {
                desktop.open(existingQualifications);//opens the specified file
            } catch (IOException ex) {
                Logger.getLogger(EmployeesPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this, "File Does Not Exist");
        }
    }//GEN-LAST:event_existingEmployeeQualificationsViewButtonActionPerformed

    private void existingEmployeeTuesdayCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingEmployeeTuesdayCheckBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existingEmployeeTuesdayCheckBoxActionPerformed

    private void existingEmployeeCalculateHourRateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingEmployeeCalculateHourRateButtonActionPerformed
        double hpd=Double.parseDouble(existingEmployeeWorkHoursPerDayTextField.getText());
        double salary=Double.parseDouble(existingEmployeeSalaryTextField.getText());
        int daysWorked= getExistingEmployeeWorkWeek().size();
        double hourRate = salary/(daysWorked*hpd*3.8720238095);
        existingEmployeeCalculateHourRateTextField.setText(""+hourRate);
    }//GEN-LAST:event_existingEmployeeCalculateHourRateButtonActionPerformed
    
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        removeEmployeeButton.setEnabled(false);
        uploadDayDetailsButton.setEnabled(false);
        updateContactDetailsButton.setEnabled(false);
        updateWorkHistoryRecordButton.setEnabled(false);
        removeWorkHistoryRecordButton.setEnabled(false);
        filterWorkHistoryButton.setEnabled(false);
        int index = searchComboBox.getSelectedIndex();
        String searchItem = searchBarTextField.getText();
        DefaultTableModel dtm=(DefaultTableModel)searchResultsTable.getModel();
        dtm.setRowCount(0);
        DefaultTableModel dtm2=(DefaultTableModel)workHistoryTable.getModel();
        dtm2.setRowCount(0);
        if(index==0){
            allEmployees= controller.getEmployeeIdsAndNames(controller.getIDforUsername(DBconnection.getUsername()));
            for(SuperDTO employee: allEmployees){
                EmployeeDTO e= (EmployeeDTO)employee;
                String ID = e.getEmployeeID();
                String name = e.getFirstName()+" "+e.getMiddleName()+" "+e.getLastName();
                dtm.addRow(new Object[]{ID,name});
            }
        }else if(index==1){
            EmployeeDTO employee= (EmployeeDTO)controller.getEmployeeByID(searchBarTextField.getText());
            dtm.setRowCount(0);
            String ID = employee.getEmployeeID();
            String name = employee.getFirstName()+""+employee.getMiddleName()+""+employee.getLastName();
            dtm.addRow(new Object[]{ID,name});
        }
    }//GEN-LAST:event_searchButtonActionPerformed
    
    private void clearExistingEmployeeForm(){        
        //INSERT CODE HERE
        clearWorkHistoryForm();
    }
    
    private void clearWorkHistoryForm(){
        filterDateChooser.setDate(null);
    }
    
    private void removeEmployeeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeEmployeeButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Removing this employee will permanantly delete all details and work records related to this employee. Do you wish to proceed?");
        if(showConfirmDialog!=0){return;}
        int selectedRow = searchResultsTable.getSelectedRow();
        if(selectedRow==-1){
            return;
        }
        boolean status=controller.deleteEmployee(String.valueOf(searchResultsTable.getValueAt(selectedRow, 0)));
        if(status){
            JOptionPane.showMessageDialog(this, "Deleted employee details and work records");
            DefaultTableModel model = (DefaultTableModel)searchResultsTable.getModel();
            model.removeRow(selectedRow);
            removeEmployeeButton.setEnabled(false);
            uploadDayDetailsButton.setEnabled(false);
            updateContactDetailsButton.setEnabled(false);
            updateWorkHistoryRecordButton.setEnabled(false);
            removeWorkHistoryRecordButton.setEnabled(false);
            filterWorkHistoryButton.setEnabled(false);
            clearExistingEmployeeForm();
        }else{
            JOptionPane.showMessageDialog(this, "Deleted employee details and work records");
        }
        
    }//GEN-LAST:event_removeEmployeeButtonActionPerformed

    private void searchResultsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultsTableMouseClicked
        removeEmployeeButton.setEnabled(true);
        uploadDayDetailsButton.setEnabled(true);
        updateContactDetailsButton.setEnabled(true);
        filterWorkHistoryButton.setEnabled(true);
        int selectedRow = searchResultsTable.getSelectedRow(); //First row= 0 
        existingemployeeID= String.valueOf(searchResultsTable.getValueAt(selectedRow,0));
        EmployeeDTO employee = (EmployeeDTO)controller.getEmployeeByID(existingemployeeID);
       

        existingEmployeeNICTextField.setText(employee.getNic());
        existingEmployeeIDTextField.setText(employee.getEmployeeID());
        existingEmployeeFirstNameTextField.setText(employee.getFirstName());
        existingEmployeeMiddleNameTextField.setText(employee.getMiddleName());
        existingEmployeeLastNameTextField.setText(employee.getLastName());
        existingEmployeeBirthdayTextField.setText(employee.getBirthday());
        existingEmployeeNationalityTextField.setText(employee.getNationality());
        existingEmployeeBloodGroupTextField.setText(employee.getBloodGroup());
        
        if(employee.isMaritalStatus()){
            existingEmployeeMarriedRadioButton.setSelected(true);
        }else{
            existingEmployeeUnmarriedRadioButton.setSelected(true);
        }
        if(employee.getGender().equals("male")){
            existingEmployeeMaleRadioButton.setSelected(true);
        }else if(employee.getGender().equals("female")){
            existingEmployeeFemaleRadioButton.setSelected(true);
        }else{
            existingEmployeeOtherRadioButton.setSelected(true);
        }
        existingEmployeeAddressTextField.setText(employee.getPermanantAddress());
        existingEmployeeContactNumberTextField.setText(employee.getContactNumber());
        existingEmployeeEmergencyContactNumberTextField.setText(employee.getEmergencyContactNumber());
        existingEmployeeEmergencyContactPersonTextField.setText(employee.getEmergencyContactPerson());
        existingEmployeeEmergencyContactRelationshipTextField.setText(employee.getRelationshipWithEmergencyContactPerson());
        existingEmployeeCorrespondanceAddressTextField.setText(employee.getAddressOfCorrespondance());
        existingEmployeeEmailTextField.setText(employee.getEmail());
        existingEmployeeDepartmentTextField.setText(employee.getDepartment());
        existingEmployeeDesignationTextField.setText(employee.getDesignation());
        existingEmployeeSalaryTextField.setText(""+employee.getSalary());
        existingEmployeeOTRateTextField.setText(""+employee.getOtrate());
        existingEmployeeWorkHoursPerDayTextField.setText(""+employee.getHpd());
        
        
        if(employee.isEmploymentStatus()){
            existingEmployeeActiveRadioButton.setSelected(true);
        }else{
            existingEmployeeInactiveRadioButton.setSelected(true);
        }

        existingEmployeeDateOfJoiningTextField.setText(employee.getDateOfJoining());
        existingEmployeeManagerIDTextField.setText(employee.getManagerID());
        existingEmployeeBankNumberTextField.setText(employee.getBankAccountNumber());
        existingEmployeeBankNameTextField.setText(employee.getBankName());
        existingEmployeeBankBranchTextField.setText(employee.getBankBranch());
        existingQualifications=employee.getQualifications();
        existingEmploymentAgreement=employee.getEmploymentAgreement();
        
        if(existingEmploymentAgreement!=null)
            existingEmployeeAgreementFileName.setText(existingEmploymentAgreement.getName());
        else existingEmployeeAgreementFileName.setText("");
        
        if(existingQualifications!=null)
            existingEmployeeQualificationsFileName.setText(existingQualifications.getName());
        else existingEmployeeQualificationsFileName.setText("");
        
        existingEmployeeDateOfLeaveTextField.setText(employee.getDateOfLeaving());
              
        for(String day: employee.getWorkWeek()){
            switch(day){
                case "monday":existingEmployeeMondayCheckBox.setSelected(true);break;
                case "tuesday":existingEmployeeTuesdayCheckBox.setSelected(true);break;
                case "wednesday":existingEmployeeWednesdayCheckBox.setSelected(true);break;
                case "thursday":existingEmployeeThursdayCheckBox.setSelected(true);break;
                case "friday":existingEmployeeFridayCheckBox.setSelected(true);break;
                case "saturday":existingEmployeeSaturdayCheckBox.setSelected(true);break;
                case "sunday":existingEmployeeSundayCheckBox.setSelected(true);    
            }
        }
        try{ 
            
            LocalDate date=LocalDate.now();
            WorkRecordDTO workRecord=(WorkRecordDTO)controller.getWorkRecordByIDandDay(existingemployeeID,date);
            clockedInTextField.setText(""+ workRecord.getClockedIn());
            clockedOutTextField.setText(""+ workRecord.getClockedOut());
            workDescriptionTextField.setText(workRecord.getWorkDescription());
            workLocationTextField.setText(workRecord.getWorkLocation());
            commentsTextField.setText(workRecord.getComment());
            
        }catch( NullPointerException e){
            System.out.println("No work record for today");
        }                
    }//GEN-LAST:event_searchResultsTableMouseClicked
    ArrayList<WorkRecordDTO> workRecords;
    private void filterWorkHistoryButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_filterWorkHistoryButtonActionPerformed
        updateWorkHistoryRecordButton.setEnabled(false);
        removeWorkHistoryRecordButton.setEnabled(false);
        java.util.Date date = filterDateChooser.getDate();
        LocalDate day = LocalDate.ofInstant(date.toInstant(), ZoneId.systemDefault());
        workRecords =new ArrayList<WorkRecordDTO> ();
        WorkRecordDTO record=(WorkRecordDTO)controller.getWorkRecordByIDandDay(existingemployeeID,day);
        if(record!=null){
            workRecords.add(record);
        }
        DefaultTableModel dtm=(DefaultTableModel)workHistoryTable.getModel();
        dtm.setRowCount(0);
        for(WorkRecordDTO workRecord:  workRecords){
            dtm.addRow(new Object[]{workRecord.getDay(),""+workRecord.getClockedIn(),""+workRecord.getClockedOut()});
        }
    }//GEN-LAST:event_filterWorkHistoryButtonActionPerformed

    private void workHistoryTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_workHistoryTableMouseClicked
        
        if(searchResultsTable.getSelectedRow()!=-1){
            updateWorkHistoryRecordButton.setEnabled(true);
            removeWorkHistoryRecordButton.setEnabled(true);
        }
        int selectedRow=workHistoryTable.getSelectedRow();
        WorkRecordDTO record= workRecords.get(selectedRow);
        workHistoryDateChooser.setDate(Date.from(record.getDay().atStartOfDay(ZoneId.systemDefault()).toInstant()));
        workHistoryClockedInTextField.setText(""+record.getClockedIn());
        workHistoryClockedOutTextField.setText(""+record.getClockedOut());
        workHistoryLocationTextField.setText(""+record.getWorkLocation());
        workHistoryDescriptionTextField.setText(""+record.getWorkDescription());
        workHistoryCommentTextField.setText(""+record.getComment());

    }//GEN-LAST:event_workHistoryTableMouseClicked

    private void updateWorkHistoryRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateWorkHistoryRecordButtonActionPerformed
        String ID=String.valueOf(searchResultsTable.getValueAt(searchResultsTable.getSelectedRow(), 0));
        java.util.Date date = workHistoryDateChooser.getDate();
        LocalDate day = LocalDate.ofInstant(date.toInstant(), ZoneId.systemDefault());
        String clockedInString=workHistoryClockedInTextField.getText();
        LocalTime clockedIn=null;
        
        
        String clockedOutString=workHistoryClockedOutTextField.getText();
        LocalTime clockedOut=null;
        if(validateTime(clockedOutString)){
            clockedOut=LocalTime.parse(clockedOutString, DateTimeFormatter.ofPattern("HH:mm:ss"));
            if(day.equals(LocalDate.now()))controller.updateEmployeeAttendance(ID,false);
        }
        else if(clockedOutString.strip().length()>0){
            JOptionPane.showMessageDialog(this, "Please enter a time in the format HH:mm:ss");
            return;
        }
        if(validateTime(clockedInString)){
            clockedIn=LocalTime.parse(clockedInString, DateTimeFormatter.ofPattern("HH:mm:ss"));
            if(day.equals(LocalDate.now()))controller.updateEmployeeAttendance(ID,true);
        }
        else if(clockedInString.strip().length()>0){
            JOptionPane.showMessageDialog(this, "Please enter a time in the format HH:mm:ss");
            return;
        }
        String workLocation= workHistoryLocationTextField.getText();
        String workDescription= workHistoryDescriptionTextField.getText();
        String comment= workHistoryCommentTextField.getText();
        boolean result=controller.addWorkRecord(new WorkRecordDTO(day,ID,clockedIn,clockedOut,workLocation,workDescription,comment));
        if(result){
            JOptionPane.showMessageDialog(this,"Work record update successful");
        }else{
            JOptionPane.showMessageDialog(this,"Work record update failed");
        }
    }//GEN-LAST:event_updateWorkHistoryRecordButtonActionPerformed

    private void removeWorkHistoryRecordButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeWorkHistoryRecordButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Romove this record?");
        if(showConfirmDialog!=0){return;}
        int selectedRow = workHistoryTable.getSelectedRow();
        if(selectedRow==-1){
            return;
        }
        String ID=String.valueOf(searchResultsTable.getValueAt(searchResultsTable.getSelectedRow(), 0));
        java.util.Date date = workHistoryDateChooser.getDate();
        LocalDate day = LocalDate.ofInstant(date.toInstant(), ZoneId.systemDefault());
        boolean status=controller.deleteWorkRecord(ID,day);
        if(status){
            JOptionPane.showMessageDialog(this, "Work record deleted");
            DefaultTableModel model = (DefaultTableModel)workHistoryTable.getModel();
            model.removeRow(selectedRow);
            updateWorkHistoryRecordButton.setEnabled(false);
            removeWorkHistoryRecordButton.setEnabled(false);
            clearWorkHistoryForm();
        }else{
            JOptionPane.showMessageDialog(this, "Failed to delete work record");
        }       
    }//GEN-LAST:event_removeWorkHistoryRecordButtonActionPerformed

    private void updateContactDetailsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateContactDetailsButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Update these contact details?");
        if(showConfirmDialog!=0){return;}
        if(validateExistingContactDetails()==false)return;
        EmployeeDTO employee=new EmployeeDTO(existingemployeeID,existingcontactNumber,existingemail,
                existingaddressForCorrespondance,existingemergencyContactNumber,existingemergencyContactPerson,
                existingrelationshipWithEmergencyContactPerson);
        boolean stat= controller.updateEmployeeContactDetails(employee);
        if(stat)JOptionPane.showMessageDialog(this,"Contact details successfuly updated");
        else JOptionPane.showMessageDialog(this,"Failed to update contact details");
    }//GEN-LAST:event_updateContactDetailsButtonActionPerformed

    private void newEmployeeQualificationsRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeQualificationsRemoveButtonActionPerformed
        qualifications=null;
        newEmployeeQualificationsFileName.setText("");
    }//GEN-LAST:event_newEmployeeQualificationsRemoveButtonActionPerformed

    private void newEmployeeAgreementRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newEmployeeAgreementRemoveButtonActionPerformed
        employmentAgreement=null;
        newEmployeeAgreementFileName.setText("");
    }//GEN-LAST:event_newEmployeeAgreementRemoveButtonActionPerformed

    private void existingEmployeeAgreementRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingEmployeeAgreementRemoveButtonActionPerformed
        existingEmploymentAgreement = null;
        existingEmployeeAgreementFileName.setText("");        
    }//GEN-LAST:event_existingEmployeeAgreementRemoveButtonActionPerformed

    private void existingEmployeeQualificationsRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingEmployeeQualificationsRemoveButtonActionPerformed
        existingQualifications = null;
        existingEmployeeQualificationsFileName.setText("");
    }//GEN-LAST:event_existingEmployeeQualificationsRemoveButtonActionPerformed
    private ArrayList<String> getNewEmployeeWorkWeek(){
        ArrayList<String> arr= new ArrayList<String>();
        if(newEmployeeMondayCheckBox.isSelected())arr.add("monday");
        if(newEmployeeTuesdayCheckBox.isSelected())arr.add("tuesday");
        if(newEmployeeWednesdayCheckBox.isSelected())arr.add("wednesday");
        if(newEmployeeThursdayCheckBox.isSelected())arr.add("thursday");
        if(newEmployeeFridayCheckBox.isSelected())arr.add("friday");
        if(newEmployeeSaturdayCheckBox.isSelected())arr.add("saturday");
        if(newEmployeeSundayCheckBox.isSelected())arr.add("sunday");
        return arr;
    }
    
    private ArrayList<String> getExistingEmployeeWorkWeek(){
        ArrayList<String> arr= new ArrayList<String>();
        if(existingEmployeeMondayCheckBox.isSelected())arr.add("monday");
        if(existingEmployeeTuesdayCheckBox.isSelected())arr.add("tuesday");
        if(existingEmployeeWednesdayCheckBox.isSelected())arr.add("wednesday");
        if(existingEmployeeThursdayCheckBox.isSelected())arr.add("thursday");
        if(existingEmployeeFridayCheckBox.isSelected())arr.add("friday");
        if(existingEmployeeSaturdayCheckBox.isSelected())arr.add("saturday");
        if(existingEmployeeSundayCheckBox.isSelected())arr.add("sunday");
        return arr;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel clockedInLabel;
    private javax.swing.JTextField clockedInTextField;
    private javax.swing.JLabel clockedOutLabel;
    private javax.swing.JTextField clockedOutTextField;
    private javax.swing.JLabel commentsLabel;
    private javax.swing.JTextField commentsTextField;
    private javax.swing.JTabbedPane employeeTabbedPane;
    private javax.swing.ButtonGroup employmentStatusButtonGroup;
    private javax.swing.JRadioButton existingEmployeeActiveRadioButton;
    private javax.swing.JLabel existingEmployeeAddressLabel;
    private javax.swing.JTextField existingEmployeeAddressTextField;
    private javax.swing.JLabel existingEmployeeAgreementFileName;
    private javax.swing.JButton existingEmployeeAgreementRemoveButton;
    private javax.swing.JButton existingEmployeeAgreementUploadButton;
    private javax.swing.JButton existingEmployeeAgreementViewButton;
    private javax.swing.JLabel existingEmployeeBankAccountNumberLabel;
    private javax.swing.JLabel existingEmployeeBankBranchLabel;
    private javax.swing.JTextField existingEmployeeBankBranchTextField;
    private javax.swing.JLabel existingEmployeeBankNameLabel;
    private javax.swing.JTextField existingEmployeeBankNameTextField;
    private javax.swing.JTextField existingEmployeeBankNumberTextField;
    private javax.swing.JLabel existingEmployeeBirthdayLabel;
    private javax.swing.JFormattedTextField existingEmployeeBirthdayTextField;
    private javax.swing.JLabel existingEmployeeBloodGroupLabel;
    private javax.swing.JTextField existingEmployeeBloodGroupTextField;
    private javax.swing.JButton existingEmployeeCalculateHourRateButton;
    private javax.swing.JTextField existingEmployeeCalculateHourRateTextField;
    private javax.swing.JPanel existingEmployeeContactDetailsPanel;
    private javax.swing.JLabel existingEmployeeContactNumberLabel;
    private javax.swing.JTextField existingEmployeeContactNumberTextField;
    private javax.swing.JLabel existingEmployeeCorrespondanceAddressLabel;
    private javax.swing.JTextField existingEmployeeCorrespondanceAddressTextField;
    private javax.swing.JLabel existingEmployeeDapartmentLabel;
    private javax.swing.JLabel existingEmployeeDateOfJoinLabel;
    private javax.swing.JTextField existingEmployeeDateOfJoiningTextField;
    private javax.swing.JLabel existingEmployeeDateOfLeaveLabel;
    private javax.swing.JTextField existingEmployeeDateOfLeaveTextField;
    private javax.swing.JTextField existingEmployeeDepartmentTextField;
    private javax.swing.JLabel existingEmployeeDesignationLabel;
    private javax.swing.JTextField existingEmployeeDesignationTextField;
    private javax.swing.JTabbedPane existingEmployeeDetailsTabbedPane;
    private javax.swing.JLabel existingEmployeeEmailLabel;
    private javax.swing.JTextField existingEmployeeEmailTextField;
    private javax.swing.JLabel existingEmployeeEmergencyContactNumberLabel;
    private javax.swing.JTextField existingEmployeeEmergencyContactNumberTextField;
    private javax.swing.JLabel existingEmployeeEmergencyContactPersonLabel;
    private javax.swing.JTextField existingEmployeeEmergencyContactPersonTextField;
    private javax.swing.JLabel existingEmployeeEmergencyContactRelationshipLabel;
    private javax.swing.JTextField existingEmployeeEmergencyContactRelationshipTextField;
    private javax.swing.JPanel existingEmployeeEmploymentDetailsPanel;
    private javax.swing.JLabel existingEmployeeEmploymentStatusLabel;
    private javax.swing.JRadioButton existingEmployeeFemaleRadioButton;
    private javax.swing.JLabel existingEmployeeFirstNameLabel;
    private javax.swing.JTextField existingEmployeeFirstNameTextField;
    private javax.swing.JCheckBox existingEmployeeFridayCheckBox;
    private javax.swing.ButtonGroup existingEmployeeGenderButtonGroup;
    private javax.swing.JLabel existingEmployeeGenderLabel;
    private javax.swing.JLabel existingEmployeeIDLabel;
    private javax.swing.JTextField existingEmployeeIDTextField;
    private javax.swing.JRadioButton existingEmployeeInactiveRadioButton;
    private javax.swing.JTextField existingEmployeeLastNameTextField;
    private javax.swing.JRadioButton existingEmployeeMaleRadioButton;
    private javax.swing.JLabel existingEmployeeManagerIDLabel;
    private javax.swing.JTextField existingEmployeeManagerIDTextField;
    private javax.swing.ButtonGroup existingEmployeeMaritalStatusButtonGroup;
    private javax.swing.JRadioButton existingEmployeeMarriedRadioButton;
    private javax.swing.JLabel existingEmployeeMarritalStatusLabel;
    private javax.swing.JLabel existingEmployeeMiddleNameLabel;
    private javax.swing.JTextField existingEmployeeMiddleNameTextField;
    private javax.swing.JCheckBox existingEmployeeMondayCheckBox;
    private javax.swing.JLabel existingEmployeeNICLabel;
    private javax.swing.JTextField existingEmployeeNICTextField;
    private javax.swing.JLabel existingEmployeeNationalityLabel;
    private javax.swing.JTextField existingEmployeeNationalityTextField;
    private javax.swing.JLabel existingEmployeeOTRateLabel;
    private javax.swing.JTextField existingEmployeeOTRateTextField;
    private javax.swing.JRadioButton existingEmployeeOtherRadioButton;
    private javax.swing.JPanel existingEmployeePanel;
    private javax.swing.JPanel existingEmployeePersonalDetailsPanel;
    private javax.swing.JLabel existingEmployeeQualificationsFileName;
    private javax.swing.JLabel existingEmployeeQualificationsLabel;
    private javax.swing.JButton existingEmployeeQualificationsRemoveButton;
    private javax.swing.JButton existingEmployeeQualificationsUploadButton;
    private javax.swing.JButton existingEmployeeQualificationsViewButton;
    private javax.swing.JLabel existingEmployeeSalaryLabel;
    private javax.swing.JTextField existingEmployeeSalaryTextField;
    private javax.swing.JCheckBox existingEmployeeSaturdayCheckBox;
    private javax.swing.JCheckBox existingEmployeeSundayCheckBox;
    private javax.swing.JCheckBox existingEmployeeThursdayCheckBox;
    private javax.swing.JCheckBox existingEmployeeTuesdayCheckBox;
    private javax.swing.JRadioButton existingEmployeeUnmarriedRadioButton;
    private javax.swing.JCheckBox existingEmployeeWednesdayCheckBox;
    private javax.swing.JLabel existingEmployeeWorkHoursPerDayLabel;
    private javax.swing.JTextField existingEmployeeWorkHoursPerDayTextField;
    private javax.swing.JLabel existingEmployeeWorkWeekLabel;
    private javax.swing.ButtonGroup existingEmploymentStatusButtonGroup;
    private com.toedter.calendar.JDateChooser filterDateChooser;
    private javax.swing.JButton filterWorkHistoryButton;
    private javax.swing.ButtonGroup genderButtonGroup;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jobDetailsPanel;
    private javax.swing.ButtonGroup maritalStatusButtonGroup;
    private javax.swing.JRadioButton newEmployeeActiveRadioButton;
    private javax.swing.JButton newEmployeeAddButton;
    private javax.swing.JLabel newEmployeeAddressLabel;
    private javax.swing.JTextField newEmployeeAddressTextField;
    private javax.swing.JLabel newEmployeeAgreementFileName;
    private javax.swing.JLabel newEmployeeAgreementLabel;
    private javax.swing.JLabel newEmployeeAgreementLabel1;
    private javax.swing.JButton newEmployeeAgreementRemoveButton;
    private javax.swing.JButton newEmployeeAgreementUploadButton;
    private javax.swing.JButton newEmployeeAgreementViewButton;
    private javax.swing.JLabel newEmployeeBankAccountNumberLabel;
    private javax.swing.JLabel newEmployeeBankBranchLabel;
    private javax.swing.JTextField newEmployeeBankBranchTextField;
    private javax.swing.JLabel newEmployeeBankNameLabel;
    private javax.swing.JTextField newEmployeeBankNameTextField;
    private javax.swing.JTextField newEmployeeBankNumberTextField;
    private javax.swing.JLabel newEmployeeBirthdayLabel;
    private javax.swing.JFormattedTextField newEmployeeBirthdayTextField;
    private javax.swing.JLabel newEmployeeBloodGroupLabel;
    private javax.swing.JTextField newEmployeeBloodGroupTextField;
    private javax.swing.JButton newEmployeeCalculateHourRateButton;
    private javax.swing.JTextField newEmployeeCalculateHourRateTextField;
    private javax.swing.JButton newEmployeeClearFormButton;
    private javax.swing.JPanel newEmployeeContactDetailsPanel;
    private javax.swing.JLabel newEmployeeContactNumberLabel;
    private javax.swing.JTextField newEmployeeContactNumberTextField;
    private javax.swing.JLabel newEmployeeCorrespondanceAddressLabel;
    private javax.swing.JTextField newEmployeeCorrespondanceAddressTextField;
    private javax.swing.JLabel newEmployeeDapartmentLabel;
    private javax.swing.JLabel newEmployeeDateOfJoinLabel;
    private javax.swing.JTextField newEmployeeDateOfJoiningTextField;
    private javax.swing.JTextField newEmployeeDepartmentTextField;
    private javax.swing.JLabel newEmployeeDesignationLabel;
    private javax.swing.JTextField newEmployeeDesignationTextField;
    private javax.swing.JLabel newEmployeeEmailLabel;
    private javax.swing.JTextField newEmployeeEmailTextField;
    private javax.swing.JLabel newEmployeeEmergencyContactNumberLabel;
    private javax.swing.JTextField newEmployeeEmergencyContactNumberTextField;
    private javax.swing.JLabel newEmployeeEmergencyContactPersonLabel;
    private javax.swing.JTextField newEmployeeEmergencyContactPersonTextField;
    private javax.swing.JLabel newEmployeeEmergencyContactRelationshipLabel;
    private javax.swing.JTextField newEmployeeEmergencyContactRelationshipTextField;
    private javax.swing.JPanel newEmployeeEmploymentDetailsPanel;
    private javax.swing.JLabel newEmployeeEmploymentStatusLabel;
    private javax.swing.JRadioButton newEmployeeFemaleRadioButton;
    private javax.swing.JLabel newEmployeeFirstNameLabel;
    private javax.swing.JTextField newEmployeeFirstNameTextField;
    private javax.swing.JCheckBox newEmployeeFridayCheckBox;
    private javax.swing.JLabel newEmployeeGenderLabel;
    private javax.swing.JLabel newEmployeeIDLabel;
    private javax.swing.JTextField newEmployeeIDTextField;
    private javax.swing.JRadioButton newEmployeeInactiveRadioButton;
    private javax.swing.JLabel newEmployeeLastNameLabel;
    private javax.swing.JLabel newEmployeeLastNameLabel1;
    private javax.swing.JTextField newEmployeeLastNameTextField;
    private javax.swing.JRadioButton newEmployeeMaleRadioButton;
    private javax.swing.JLabel newEmployeeManagerIDLabel;
    private javax.swing.JTextField newEmployeeManagerIDTextField;
    private javax.swing.JRadioButton newEmployeeMarriedRadioButton;
    private javax.swing.JLabel newEmployeeMarritalStatusLabel;
    private javax.swing.JLabel newEmployeeMiddleNameLabel;
    private javax.swing.JTextField newEmployeeMiddleNameTextField;
    private javax.swing.JCheckBox newEmployeeMondayCheckBox;
    private javax.swing.JLabel newEmployeeNICLabel;
    private javax.swing.JTextField newEmployeeNICTextField;
    private javax.swing.JLabel newEmployeeNationalityLabel;
    private javax.swing.JTextField newEmployeeNationalityTextField;
    private javax.swing.JLabel newEmployeeOTRateLabel;
    private javax.swing.JTextField newEmployeeOTRateTextField;
    private javax.swing.JRadioButton newEmployeeOtherRadioButton;
    private javax.swing.JPanel newEmployeePanel;
    private javax.swing.JPanel newEmployeePersonalDetailsPanel;
    private javax.swing.JLabel newEmployeeQualificationsFileName;
    private javax.swing.JLabel newEmployeeQualificationsLabel;
    private javax.swing.JButton newEmployeeQualificationsRemoveButton;
    private javax.swing.JButton newEmployeeQualificationsUploadButton;
    private javax.swing.JButton newEmployeeQualificationsViewButton;
    private javax.swing.JLabel newEmployeeSalaryLabel;
    private javax.swing.JTextField newEmployeeSalaryTextField;
    private javax.swing.JCheckBox newEmployeeSaturdayCheckBox;
    private javax.swing.JCheckBox newEmployeeSundayCheckBox;
    private javax.swing.JCheckBox newEmployeeThursdayCheckBox;
    private javax.swing.JCheckBox newEmployeeTuesdayCheckBox;
    private javax.swing.JRadioButton newEmployeeUnmarriedRadioButton;
    private javax.swing.JCheckBox newEmployeeWednesdayCheckBox;
    private javax.swing.JLabel newEmployeeWorkHoursPerDayLabel;
    private javax.swing.JTextField newEmployeeWorkHoursPerDayTextField;
    private javax.swing.JLabel newEmployeeWorkWeekLabel;
    private javax.swing.JPanel otherDetailsPanel;
    private javax.swing.JButton removeEmployeeButton;
    private javax.swing.JButton removeWorkHistoryRecordButton;
    private javax.swing.JTextField searchBarTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> searchComboBox;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTable searchResultsTable;
    private javax.swing.JPanel todayPanel;
    private javax.swing.JButton updateContactDetailsButton;
    private javax.swing.JButton updateEmploymentDetailsButton;
    private javax.swing.JButton updateWorkHistoryRecordButton;
    private javax.swing.JButton uploadDayDetailsButton;
    private javax.swing.JLabel workDescriptionLabel;
    private javax.swing.JTextField workDescriptionTextField;
    private javax.swing.JLabel workHistoryClockedInLabel;
    private javax.swing.JTextField workHistoryClockedInTextField;
    private javax.swing.JLabel workHistoryClockedOutLabel;
    private javax.swing.JTextField workHistoryClockedOutTextField;
    private javax.swing.JLabel workHistoryCommentLabel;
    private javax.swing.JTextField workHistoryCommentTextField;
    private com.toedter.calendar.JDateChooser workHistoryDateChooser;
    private javax.swing.JLabel workHistoryDayLabel;
    private javax.swing.JLabel workHistoryDescriptionLabel;
    private javax.swing.JTextField workHistoryDescriptionTextField;
    private javax.swing.JLabel workHistoryFilterDayLabel;
    private javax.swing.JLabel workHistoryLocationLabel;
    private javax.swing.JTextField workHistoryLocationTextField;
    private javax.swing.JPanel workHistoryPanel;
    private javax.swing.JTable workHistoryTable;
    private javax.swing.JLabel workLocationLabel;
    private javax.swing.JTextField workLocationTextField;
    // End of variables declaration//GEN-END:variables
}
