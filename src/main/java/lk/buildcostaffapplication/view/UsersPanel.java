/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lk.buildcostaffapplication.view;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.buildcostaffapplication.controller.UserController;
import lk.buildcostaffapplication.dto.SuperDTO;
import lk.buildcostaffapplication.dto.UserDTO;

/**
 *
 * @author Binath Perera
 */
public class UsersPanel extends javax.swing.JPanel {

    /**
     * Creates new form UsersPanel
     */
    UserController controller;
    public UsersPanel() {
        initComponents();
        controller=new UserController();
        cancelButton.setEnabled(false);
        deleteUserButton.setEnabled(false);
        updateButton.setEnabled(false);
        String[] roles=new String[roleDescriptions.length];
        for(int i=0;i<roles.length;i++)roles[i]=roleDescriptions[i][0];
        priviledgeComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(roles));
        descriptionTextArea.setText(roleDescriptions[0][1]);
        DefaultTableModel dtm=(DefaultTableModel)priviledgesTable.getModel();
        dtm.setRowCount(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passwordLabel = new javax.swing.JLabel();
        usernameLabel = new javax.swing.JLabel();
        usernameTextField = new javax.swing.JTextField();
        passwordTextField = new javax.swing.JTextField();
        priviledgeComboBox = new javax.swing.JComboBox<>();
        priviledgesLabel = new javax.swing.JLabel();
        updateButton = new javax.swing.JButton();
        removeRowButton = new javax.swing.JButton();
        addPriviledgeButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        priviledgesTable = new javax.swing.JTable();
        addUserButton = new javax.swing.JButton();
        emailTextField = new javax.swing.JTextField();
        emailLabel = new javax.swing.JLabel();
        searchPanel = new javax.swing.JPanel();
        searchComboBox = new javax.swing.JComboBox<>();
        searchBarTextField = new javax.swing.JTextField();
        searchButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        searchResultsTable = new javax.swing.JTable();
        deleteUserButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        descriptionLabel = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        employeeIdLabel = new javax.swing.JLabel();
        employeeIdTextField = new javax.swing.JTextField();

        setPreferredSize(new java.awt.Dimension(1256, 800));

        passwordLabel.setText("Password");

        usernameLabel.setText("Username");

        priviledgeComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                priviledgeComboBoxActionPerformed(evt);
            }
        });

        priviledgesLabel.setText("Priviledge");

        updateButton.setText("Update User Details");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        removeRowButton.setText("Remove row");
        removeRowButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeRowButtonActionPerformed(evt);
            }
        });

        addPriviledgeButton.setText("Add this priviledge");
        addPriviledgeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addPriviledgeButtonActionPerformed(evt);
            }
        });

        priviledgesTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Priviledges"
            }
        ));
        priviledgesTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                priviledgesTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(priviledgesTable);

        addUserButton.setText("Add user");
        addUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addUserButtonActionPerformed(evt);
            }
        });

        emailLabel.setText("Email");

        searchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        searchComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Get all", "ID", " " }));

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Employee ID", "Employee Name", "Username"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        searchResultsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchResultsTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(searchResultsTable);

        deleteUserButton.setText("Delete Selected User");
        deleteUserButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteUserButtonActionPerformed(evt);
            }
        });

        cancelButton.setText("Cancel Selection");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(searchBarTextField)
                        .addGap(18, 18, 18)
                        .addComponent(searchButton)
                        .addGap(16, 16, 16))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane2)
                        .addContainerGap())))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(deleteUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(deleteUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cancelButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        descriptionLabel.setText("Description");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane3.setViewportView(descriptionTextArea);

        employeeIdLabel.setText("Employee ID");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchPanel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passwordLabel)
                                    .addComponent(emailLabel)
                                    .addComponent(usernameLabel))
                                .addGap(135, 135, 135)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(passwordTextField)
                                    .addComponent(emailTextField)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(81, 81, 81)
                                        .addComponent(employeeIdLabel)
                                        .addGap(35, 35, 35)
                                        .addComponent(employeeIdTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 484, Short.MAX_VALUE))))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(addPriviledgeButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(removeRowButton, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(priviledgesLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(priviledgeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(34, 34, 34)
                                        .addComponent(descriptionLabel)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane3))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(addUserButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(usernameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(employeeIdLabel)
                    .addComponent(usernameLabel)
                    .addComponent(employeeIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(passwordLabel)
                    .addComponent(passwordTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(emailLabel)
                    .addComponent(emailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(priviledgesLabel)
                            .addComponent(priviledgeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(descriptionLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(addPriviledgeButton)
                            .addComponent(removeRowButton)))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(updateButton)
                    .addComponent(addUserButton))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents
    ArrayList<SuperDTO> users;
    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        deleteUserButton.setEnabled(false);
        cancelButton.setEnabled(false);
        updateButton.setEnabled(false);
        addUserButton.setEnabled(true);
        removeRowButton.setEnabled(false);
        
        int index = searchComboBox.getSelectedIndex();
        String searchItem = searchBarTextField.getText();
        DefaultTableModel dtm=(DefaultTableModel)searchResultsTable.getModel();
        dtm.setRowCount(0);
        if(index==0){
            users= controller.getUsersIdsAndNames();
            for(SuperDTO employee: users){
                UserDTO u= (UserDTO)employee;
                String ID= u.getId();
                String username = u.getUsername();
                String name = u.getFirstName()+" "+u.getMiddleName()+" "+u.getLastName();
                dtm.addRow(new Object[]{ID,name,username});
            }
        }else if(index==1){
            UserDTO u= (UserDTO)controller.getUserByID(searchBarTextField.getText());
            dtm.setRowCount(0);
            String ID= u.getId();
            String username = u.getUsername();
            String name = u.getFirstName()+""+u.getMiddleName()+""+u.getLastName();
            dtm.addRow(new Object[]{ID,name,username});
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void searchResultsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultsTableMouseClicked
        cancelButton.setEnabled(true);
        deleteUserButton.setEnabled(true);
        updateButton.setEnabled(true);
        addUserButton.setEnabled(false);
        removeRowButton.setEnabled(false);
        
        int selectedRow = searchResultsTable.getSelectedRow();
        String ID= String.valueOf(searchResultsTable.getValueAt(selectedRow,0));
        UserDTO user = controller.getUserByID(ID);
            
        usernameTextField.setText(user.getUsername());
        employeeIdTextField.setText(ID);
        employeeIdTextField.setEditable(false);
        passwordTextField.setText(user.getPassword());
        emailTextField.setText(user.getEmail());
        ArrayList<String> roles = user.getRoles();
        DefaultTableModel dtm=(DefaultTableModel)priviledgesTable.getModel();
        dtm.setRowCount(0);
        for(String role: roles){
            dtm.addRow(new Object[]{role});
        }
    }//GEN-LAST:event_searchResultsTableMouseClicked
    private void clearForm(){
    
    }
    private void deleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteUserButtonActionPerformed
        deleteUserButton.setEnabled(false);
        cancelButton.setEnabled(false);
        updateButton.setEnabled(false);
        addUserButton.setEnabled(true);

        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Delete this user?");
        if(showConfirmDialog!=0){return;}
        int selectedRow = searchResultsTable.getSelectedRow();
        if(selectedRow==-1){
            return;
        }
        boolean status=controller.deleteUser(String.valueOf(searchResultsTable.getValueAt(selectedRow, 0)));
        if(status){
            JOptionPane.showMessageDialog(this, "Deleted user");
            DefaultTableModel model = (DefaultTableModel)searchResultsTable.getModel();
            model.removeRow(selectedRow);
            deleteUserButton.setEnabled(false);
            employeeIdTextField.setEditable(true);
            clearForm();
        }else{
            JOptionPane.showMessageDialog(this, "Failed to delete user");
        }

    }//GEN-LAST:event_deleteUserButtonActionPerformed

    private void removeRowButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeRowButtonActionPerformed
        int selectedRow = priviledgesTable.getSelectedRow();
        DefaultTableModel model= (DefaultTableModel)priviledgesTable.getModel();
        model.removeRow(selectedRow);
        removeRowButton.setEnabled(false);
    }//GEN-LAST:event_removeRowButtonActionPerformed

    private void addPriviledgeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addPriviledgeButtonActionPerformed
        DefaultTableModel model= (DefaultTableModel)priviledgesTable.getModel();
        model.addRow(new Object[]{priviledgeComboBox.getSelectedItem().toString()});
    }//GEN-LAST:event_addPriviledgeButtonActionPerformed

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        deleteUserButton.setEnabled(false);
        cancelButton.setEnabled(false);
        updateButton.setEnabled(false);
        addUserButton.setEnabled(true);
        employeeIdTextField.setEditable(true);
        searchResultsTable.clearSelection();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Update this user?");
        if(showConfirmDialog!=0){return;}
        UserDTO user = new UserDTO();
        user.setId(employeeIdTextField.getText());
        user.setUsername(usernameTextField.getText());
        user.setPassword(passwordTextField.getText());
        user.setEmail(emailTextField.getText());
        ArrayList<String> roles=new ArrayList<>();
        int rows=priviledgesTable.getRowCount();
        for(int i=0;i<rows;i++){
            roles.add(String.valueOf(priviledgesTable.getValueAt(i,0)));
        }
        user.setRoles(roles);
        boolean status=controller.updateUser(user);
        
        if(status){
            JOptionPane.showMessageDialog(this, "User updated");
            clearForm();
        }else{
            JOptionPane.showMessageDialog(this, "Update failed !");
        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void addUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addUserButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Add this user?");
        if(showConfirmDialog!=0){return;}
        UserDTO user = new UserDTO();
        user.setId(employeeIdTextField.getText());
        user.setUsername(usernameTextField.getText());
        user.setPassword(passwordTextField.getText());
        user.setEmail(emailTextField.getText());
        ArrayList<String> roles=new ArrayList<>();
        int rows=priviledgesTable.getRowCount();
        for(int i=0;i<rows;i++){
            roles.add(String.valueOf(priviledgesTable.getValueAt(i,0)));
        }
        user.setRoles(roles);
        boolean status=controller.addUser(user);
        
        if(status){
            JOptionPane.showMessageDialog(this, "New user added");
            clearForm();
        }else{
            JOptionPane.showMessageDialog(this, "The username already exists");
        }
    }//GEN-LAST:event_addUserButtonActionPerformed

    private void priviledgesTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_priviledgesTableMouseClicked
        removeRowButton.setEnabled(true);
    }//GEN-LAST:event_priviledgesTableMouseClicked
    String roleDescriptions[][]=new String[][]{
        {"Manage Customers","Add,delete,view and update customer details"},
        {"Manage Items","Add,delete,view and update item details"},
        {"Manage Orders","Add,delete,view and update order details"},
        {"Manage Enquiries","Add,delete,view and update inquiry details"},
        {"Manage Transport","Add,delete,view and update transport details"},
        {"Manage Users","Add,delete,view and update user details"},
        {"Manage Existing Employee Job Details","View and update employee job details. Helps manage daily activities of an employee"},
        {"Add new employees","Will provide the ability to add a new employee"},
        {"Manage Existing Employee Personal and Employment Details","Add,delete,view and update existing employee personal and employment details"}
    };
    private void priviledgeComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_priviledgeComboBoxActionPerformed
        int index=priviledgeComboBox.getSelectedIndex();
        descriptionTextArea.setText(roleDescriptions[index][1]);
    }//GEN-LAST:event_priviledgeComboBoxActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addPriviledgeButton;
    private javax.swing.JButton addUserButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton deleteUserButton;
    private javax.swing.JLabel descriptionLabel;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel emailLabel;
    private javax.swing.JTextField emailTextField;
    private javax.swing.JLabel employeeIdLabel;
    private javax.swing.JTextField employeeIdTextField;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel passwordLabel;
    private javax.swing.JTextField passwordTextField;
    private javax.swing.JComboBox<String> priviledgeComboBox;
    private javax.swing.JLabel priviledgesLabel;
    private javax.swing.JTable priviledgesTable;
    private javax.swing.JButton removeRowButton;
    private javax.swing.JTextField searchBarTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JComboBox<String> searchComboBox;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTable searchResultsTable;
    private javax.swing.JButton updateButton;
    private javax.swing.JLabel usernameLabel;
    private javax.swing.JTextField usernameTextField;
    // End of variables declaration//GEN-END:variables
}
