/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package lk.buildcostaffapplication.view;

import java.awt.Desktop;
import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.OutputStream;
import java.time.LocalDate;
import java.time.ZoneId;
import java.time.format.DateTimeFormatter;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import lk.buildcostaffapplication.controller.CustomerController;
import lk.buildcostaffapplication.controller.ItemController;
import lk.buildcostaffapplication.controller.OrderController;
import lk.buildcostaffapplication.dto.CustomerDTO;
import lk.buildcostaffapplication.dto.InstallmentDTO;
import lk.buildcostaffapplication.dto.ItemDTO;
import lk.buildcostaffapplication.dto.OrderDTO;
import lk.buildcostaffapplication.dto.OrderItemDTO;
import net.sf.jasperreports.engine.JREmptyDataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.engine.util.JRLoader;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author Binath Perera
 */
public class OrdersPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrdersPanel
     */
    CustomerController customerController;
    ItemController itemController;
    OrderController orderController;
    public OrdersPanel() {
        initComponents();
        customerController=new CustomerController();
        orderController= new OrderController();
        itemController= new ItemController();
        generateNewId();
        emailInvoiceButton.setEnabled(false);
        emailRecieptButton.setEnabled(false);
    }
    private void generateNewId(){
        newOrderIDTextField.setText(orderController.getNewOrderId());
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        existingOrderDetailsPanel = new javax.swing.JPanel();
        resultsPanel = new javax.swing.JPanel();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        paymentsAndOtherDetailsPanel = new javax.swing.JPanel();
        existingCustomerDetailsPanel = new javax.swing.JPanel();
        existingNicLabel = new javax.swing.JLabel();
        existingOrderNicTextField = new javax.swing.JTextField();
        existingCustomerLabel = new javax.swing.JLabel();
        existingOrderCustomerNameTextField = new javax.swing.JTextField();
        existingBillingAddressLabel = new javax.swing.JLabel();
        existingOrderBillingAddressTextField = new javax.swing.JTextField();
        existingDestinationLabel = new javax.swing.JLabel();
        existingOrderDestinationTextField = new javax.swing.JTextField();
        existingContactNumberLabel = new javax.swing.JLabel();
        existingOrderContactNumberTextField = new javax.swing.JTextField();
        existingCompanyNameLabel = new javax.swing.JLabel();
        existingOrderCompanyNameTextField = new javax.swing.JTextField();
        existingEmailLabel = new javax.swing.JLabel();
        existingOrderEmailTextField = new javax.swing.JTextField();
        existingDiscountsLabel = new javax.swing.JLabel();
        existingOrderDiscountsTextField = new javax.swing.JTextField();
        existingNetTotalLabel = new javax.swing.JLabel();
        existingOrderNetTotalTextField = new javax.swing.JTextField();
        existingLeaseAgreementLabel = new javax.swing.JLabel();
        uploadExistingLeaseAgreementButton = new javax.swing.JButton();
        existingLeaseAgreementFileNameLabel = new javax.swing.JLabel();
        viewExistingLeaseAgreementButton = new javax.swing.JButton();
        removeExistingLeaseAgreementButton = new javax.swing.JButton();
        jScrollPane8 = new javax.swing.JScrollPane();
        existingInstallmentsTable = new javax.swing.JTable();
        existingTotalPriceForItemsLabel = new javax.swing.JLabel();
        existingOrderTotalPriceForItemsTextField = new javax.swing.JTextField();
        existingDeliveryChargesLabel = new javax.swing.JLabel();
        existingOrderDeliveryChargesTextField = new javax.swing.JTextField();
        printInvoiceButton = new javax.swing.JButton();
        printRecieptButton = new javax.swing.JButton();
        installmentNumberLabel = new javax.swing.JLabel();
        existingInstallmentNumberTextField = new javax.swing.JTextField();
        closeOrderCheckBox = new javax.swing.JCheckBox();
        emailInvoiceButton = new javax.swing.JButton();
        emailRecieptButton = new javax.swing.JButton();
        orderItemsPanel = new javax.swing.JPanel();
        requestedDurationLabel = new javax.swing.JLabel();
        existingRequestedFromLabel = new javax.swing.JLabel();
        existingRequestedToLabel = new javax.swing.JLabel();
        existingRequestedFromDateChooser = new com.toedter.calendar.JDateChooser();
        existingRequestedToDateChooser = new com.toedter.calendar.JDateChooser();
        jScrollPane7 = new javax.swing.JScrollPane();
        orderItemsTable = new javax.swing.JTable();
        orderItemsTableTitleLabel = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        isDeliveredTextField = new javax.swing.JTextField();
        isRecievedTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        requestedToDeliverTextField = new javax.swing.JTextField();
        requestedForPickupTextField = new javax.swing.JTextField();
        searchPanel = new javax.swing.JPanel();
        itemRequiredDateComboBox = new javax.swing.JComboBox<>();
        searchButton = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        searchResultsTable = new javax.swing.JTable();
        deleteOrderButton = new javax.swing.JButton();
        orderPlacedFromDateChooser = new com.toedter.calendar.JDateChooser();
        orderPlacedToDateChooser = new com.toedter.calendar.JDateChooser();
        fromDateLabel = new javax.swing.JLabel();
        toDateLabel = new javax.swing.JLabel();
        statusComboBox = new javax.swing.JComboBox<>();
        itemRequestDateLabel = new javax.swing.JLabel();
        statusLabel = new javax.swing.JLabel();
        nicOrEmailLabel = new javax.swing.JLabel();
        nicOrEmailTextField = new javax.swing.JTextField();
        orderDateLabel = new javax.swing.JLabel();
        placedDateComboBox = new javax.swing.JComboBox<>();
        fromDateLabel1 = new javax.swing.JLabel();
        toDateLabel1 = new javax.swing.JLabel();
        itemsRequestedToDateChooser = new com.toedter.calendar.JDateChooser();
        itemsRequestedFromDateChooser = new com.toedter.calendar.JDateChooser();
        existingOrderIdTextField = new javax.swing.JTextField();
        existingOrderIdLabel = new javax.swing.JLabel();
        newOrderPanel = new javax.swing.JPanel();
        newOrderCustomerDetailsPanel = new javax.swing.JPanel();
        newOrderNicLabel = new javax.swing.JLabel();
        newOrderNicTextField = new javax.swing.JTextField();
        newOrderCustomerNameLabel = new javax.swing.JLabel();
        newOrderCustomerNameTextField = new javax.swing.JTextField();
        newOrderBillingAddressLabel = new javax.swing.JLabel();
        newOrderBillingAddressTextField = new javax.swing.JTextField();
        newOrderDestinationAddressLabel = new javax.swing.JLabel();
        newOrderDestinationAddressTextField = new javax.swing.JTextField();
        newOrderContactNumberLabel = new javax.swing.JLabel();
        newOrderContactNumberTextField = new javax.swing.JTextField();
        nicSearchButton = new javax.swing.JButton();
        newOrderCompanyNameLabel = new javax.swing.JLabel();
        newOrderCompanyNameTextField = new javax.swing.JTextField();
        newOrderEmailLabel = new javax.swing.JLabel();
        newOrderEmailTextField = new javax.swing.JTextField();
        emailSearchButton = new javax.swing.JButton();
        newOrderDetailsPanel = new javax.swing.JPanel();
        searchItemPanel = new javax.swing.JPanel();
        searchItemComboBox = new javax.swing.JComboBox<>();
        searchBarTextField = new javax.swing.JTextField();
        searchItemButton = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        itemSearchResultsTable = new javax.swing.JTable();
        addItemButton = new javax.swing.JButton();
        jScrollPane6 = new javax.swing.JScrollPane();
        newOrderItemsTable = new javax.swing.JTable();
        removeItemButton = new javax.swing.JButton();
        addNewOrderButton = new javax.swing.JButton();
        newOrderSkuLabel = new javax.swing.JLabel();
        newOrderQtyRequestedLabel = new javax.swing.JLabel();
        newOrderDurationLabel = new javax.swing.JLabel();
        newOrderDurationFromDateChooser = new com.toedter.calendar.JDateChooser();
        newOrderDurationToDateChooser = new com.toedter.calendar.JDateChooser();
        newOrderDurationFromLabel = new javax.swing.JLabel();
        newOrderDurationToLabel = new javax.swing.JLabel();
        newOrderTotalPriceForDurationLabel = new javax.swing.JLabel();
        newOrderSkuTextField = new javax.swing.JTextField();
        newOrderQtyRequestedTextField = new javax.swing.JTextField();
        newOrderTotalPriceForDurationTextField = new javax.swing.JTextField();
        newOrderLeaseAgreementLabel = new javax.swing.JLabel();
        userManualUploadButton1 = new javax.swing.JButton();
        userManualFileNameLabel = new javax.swing.JLabel();
        userManualViewButton = new javax.swing.JButton();
        userManualRemoveButton = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        newOrderIntallmentTable = new javax.swing.JTable();
        deliverTheItemsCheckBox = new javax.swing.JCheckBox();
        pickUpTheItemsCheckBox = new javax.swing.JCheckBox();
        downloadLeaseAgreementTemplateButton = new javax.swing.JButton();
        newOrderIdLabel = new javax.swing.JLabel();
        newOrderIDTextField = new javax.swing.JTextField();
        newOrderLeaseAgreementFileNameLabel = new javax.swing.JLabel();
        newOrderTotalPriceForItemsLabel = new javax.swing.JLabel();
        newOrderTotalPriceForItemsTextField = new javax.swing.JTextField();
        newOrderDeliveryChargesLabel = new javax.swing.JLabel();
        newOrderDeliveryChargesTextField = new javax.swing.JTextField();
        newOrderDiscountsLabel = new javax.swing.JLabel();
        newOrderDiscountsTextField = new javax.swing.JTextField();
        newOrderNetTotalLabel = new javax.swing.JLabel();
        newOrderNetTotalTextField = new javax.swing.JTextField();
        calculateButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        installmentDateChooser = new com.toedter.calendar.JDateChooser();
        jLabel2 = new javax.swing.JLabel();
        amountTextField = new javax.swing.JTextField();
        newOrderAddInstallmentButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        invoicesToSendDateLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        invoicesToSendTable = new javax.swing.JTable();
        invoicesToSendSearchButton = new javax.swing.JButton();
        invoicesToSendDateChooser = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        overduePaymentsTable = new javax.swing.JTable();
        overduePaymentsSearchButton = new javax.swing.JButton();

        jTabbedPane1.setPreferredSize(new java.awt.Dimension(1230, 900));

        resultsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Results"));

        existingCustomerDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer details"));

        existingNicLabel.setText("NIC");

        existingCustomerLabel.setText("Customer Name");

        existingOrderCustomerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingOrderCustomerNameTextFieldActionPerformed(evt);
            }
        });

        existingBillingAddressLabel.setText("Billing Address");

        existingDestinationLabel.setText("Destination Address");

        existingContactNumberLabel.setText("Contact Number");

        existingOrderContactNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingOrderContactNumberTextFieldActionPerformed(evt);
            }
        });

        existingCompanyNameLabel.setText("Company Name");

        existingOrderCompanyNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                existingOrderCompanyNameTextFieldActionPerformed(evt);
            }
        });

        existingEmailLabel.setText("Email");

        javax.swing.GroupLayout existingCustomerDetailsPanelLayout = new javax.swing.GroupLayout(existingCustomerDetailsPanel);
        existingCustomerDetailsPanel.setLayout(existingCustomerDetailsPanelLayout);
        existingCustomerDetailsPanelLayout.setHorizontalGroup(
            existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(existingCustomerDetailsPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(existingCustomerDetailsPanelLayout.createSequentialGroup()
                        .addGroup(existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(existingNicLabel)
                            .addComponent(existingCustomerLabel))
                        .addGap(24, 24, 24)
                        .addGroup(existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(existingOrderNicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(existingOrderCustomerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 471, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(existingCustomerDetailsPanelLayout.createSequentialGroup()
                                .addComponent(existingEmailLabel)
                                .addGap(20, 20, 20)
                                .addComponent(existingOrderEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(existingCustomerDetailsPanelLayout.createSequentialGroup()
                                .addComponent(existingCompanyNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(existingOrderCompanyNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 8, Short.MAX_VALUE))
                    .addGroup(existingCustomerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(existingDestinationLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(existingOrderDestinationTextField))
                    .addGroup(existingCustomerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(existingBillingAddressLabel)
                        .addGap(33, 33, 33)
                        .addComponent(existingOrderBillingAddressTextField))
                    .addGroup(existingCustomerDetailsPanelLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(existingContactNumberLabel)
                        .addGap(18, 18, 18)
                        .addComponent(existingOrderContactNumberTextField)))
                .addContainerGap())
        );
        existingCustomerDetailsPanelLayout.setVerticalGroup(
            existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(existingCustomerDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingNicLabel)
                    .addComponent(existingOrderNicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingEmailLabel)
                    .addComponent(existingOrderEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingCustomerLabel)
                    .addComponent(existingOrderCustomerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingCompanyNameLabel)
                    .addComponent(existingOrderCompanyNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingBillingAddressLabel)
                    .addComponent(existingOrderBillingAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingDestinationLabel)
                    .addComponent(existingOrderDestinationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(existingCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingContactNumberLabel)
                    .addComponent(existingOrderContactNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 11, Short.MAX_VALUE))
        );

        existingDiscountsLabel.setText("Discounts");

        existingNetTotalLabel.setText("Net total");

        existingOrderNetTotalTextField.setEditable(false);

        existingLeaseAgreementLabel.setText("Lease Agreement");

        uploadExistingLeaseAgreementButton.setText("Upload");
        uploadExistingLeaseAgreementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadExistingLeaseAgreementButtonActionPerformed(evt);
            }
        });

        viewExistingLeaseAgreementButton.setText("View");
        viewExistingLeaseAgreementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewExistingLeaseAgreementButtonActionPerformed(evt);
            }
        });

        removeExistingLeaseAgreementButton.setText("Remove");
        removeExistingLeaseAgreementButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeExistingLeaseAgreementButtonActionPerformed(evt);
            }
        });

        existingInstallmentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Installment Number", "Date", "Amount", "Invoice issued", "Payment"
            }
        ));
        existingInstallmentsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                existingInstallmentsTableMouseClicked(evt);
            }
        });
        jScrollPane8.setViewportView(existingInstallmentsTable);

        existingTotalPriceForItemsLabel.setText("Total price for items");

        existingDeliveryChargesLabel.setText("Delivery charges");

        printInvoiceButton.setText("Print Invoice");
        printInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printInvoiceButtonActionPerformed(evt);
            }
        });

        printRecieptButton.setText("Print reciept and mark as paid");
        printRecieptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printRecieptButtonActionPerformed(evt);
            }
        });

        installmentNumberLabel.setText("Installment number");

        closeOrderCheckBox.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        closeOrderCheckBox.setText("Close this order");
        closeOrderCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                closeOrderCheckBoxActionPerformed(evt);
            }
        });

        emailInvoiceButton.setText("Email Invoice");
        emailInvoiceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailInvoiceButtonActionPerformed(evt);
            }
        });

        emailRecieptButton.setText("Email reciept and mark as paid");
        emailRecieptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailRecieptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout paymentsAndOtherDetailsPanelLayout = new javax.swing.GroupLayout(paymentsAndOtherDetailsPanel);
        paymentsAndOtherDetailsPanel.setLayout(paymentsAndOtherDetailsPanelLayout);
        paymentsAndOtherDetailsPanelLayout.setHorizontalGroup(
            paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(existingCustomerDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(paymentsAndOtherDetailsPanelLayout.createSequentialGroup()
                .addGroup(paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(paymentsAndOtherDetailsPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane8)
                            .addGroup(paymentsAndOtherDetailsPanelLayout.createSequentialGroup()
                                .addComponent(existingTotalPriceForItemsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(existingOrderTotalPriceForItemsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(existingDeliveryChargesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(existingOrderDeliveryChargesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(existingDiscountsLabel)
                                .addGap(18, 18, 18)
                                .addComponent(existingOrderDiscountsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(existingNetTotalLabel)
                                .addGap(18, 18, 18)
                                .addComponent(existingOrderNetTotalTextField))
                            .addGroup(paymentsAndOtherDetailsPanelLayout.createSequentialGroup()
                                .addComponent(existingLeaseAgreementLabel)
                                .addGap(51, 51, 51)
                                .addComponent(uploadExistingLeaseAgreementButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(existingLeaseAgreementFileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(viewExistingLeaseAgreementButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(removeExistingLeaseAgreementButton)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(paymentsAndOtherDetailsPanelLayout.createSequentialGroup()
                        .addGap(53, 53, 53)
                        .addComponent(installmentNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(existingInstallmentNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailInvoiceButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(printInvoiceButton, javax.swing.GroupLayout.DEFAULT_SIZE, 141, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(emailRecieptButton, javax.swing.GroupLayout.DEFAULT_SIZE, 209, Short.MAX_VALUE)
                            .addComponent(printRecieptButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, paymentsAndOtherDetailsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(closeOrderCheckBox)))
                .addContainerGap())
        );
        paymentsAndOtherDetailsPanelLayout.setVerticalGroup(
            paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(paymentsAndOtherDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(existingCustomerDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(existingDiscountsLabel)
                    .addComponent(existingOrderDiscountsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingNetTotalLabel)
                    .addComponent(existingOrderNetTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingTotalPriceForItemsLabel)
                    .addComponent(existingOrderTotalPriceForItemsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(existingDeliveryChargesLabel)
                    .addComponent(existingOrderDeliveryChargesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(37, 37, 37)
                .addGroup(paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(existingLeaseAgreementFileNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(existingLeaseAgreementLabel)
                        .addComponent(uploadExistingLeaseAgreementButton)
                        .addComponent(viewExistingLeaseAgreementButton)
                        .addComponent(removeExistingLeaseAgreementButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 268, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(47, 47, 47)
                .addGroup(paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(printInvoiceButton)
                    .addComponent(printRecieptButton)
                    .addComponent(installmentNumberLabel)
                    .addComponent(existingInstallmentNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(paymentsAndOtherDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(emailInvoiceButton)
                    .addComponent(emailRecieptButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(closeOrderCheckBox)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane2.addTab("Payments and other details", paymentsAndOtherDetailsPanel);

        requestedDurationLabel.setText("Requested Duration");

        existingRequestedFromLabel.setText("From");

        existingRequestedToLabel.setText("To");

        orderItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SKU", "Item name", "Quantity", "Price for this item"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        orderItemsTable.setRowSelectionAllowed(false);
        orderItemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                orderItemsTableMouseClicked(evt);
            }
        });
        jScrollPane7.setViewportView(orderItemsTable);

        orderItemsTableTitleLabel.setText("ALL ITEMS REQUESTED FOR THIS ORDER");

        jLabel3.setText("Is delivered");

        jLabel4.setText("Is recieved");

        isDeliveredTextField.setEditable(false);

        isRecievedTextField.setEditable(false);

        jLabel5.setText("Requested to deliver");

        jLabel6.setText("Requested for pickup");

        requestedToDeliverTextField.setEditable(false);

        requestedForPickupTextField.setEditable(false);

        javax.swing.GroupLayout orderItemsPanelLayout = new javax.swing.GroupLayout(orderItemsPanel);
        orderItemsPanel.setLayout(orderItemsPanelLayout);
        orderItemsPanelLayout.setHorizontalGroup(
            orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(orderItemsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderItemsPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane7)
                        .addContainerGap())
                    .addGroup(orderItemsPanelLayout.createSequentialGroup()
                        .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderItemsTableTitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(orderItemsPanelLayout.createSequentialGroup()
                                .addComponent(requestedDurationLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(orderItemsPanelLayout.createSequentialGroup()
                                        .addComponent(existingRequestedToLabel)
                                        .addGap(33, 33, 33)
                                        .addComponent(existingRequestedToDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(orderItemsPanelLayout.createSequentialGroup()
                                        .addComponent(existingRequestedFromLabel)
                                        .addGap(18, 18, 18)
                                        .addComponent(existingRequestedFromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING))
                                .addGap(18, 18, 18)
                                .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(requestedToDeliverTextField)
                                    .addComponent(requestedForPickupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(18, 18, 18)
                                .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(isDeliveredTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 145, Short.MAX_VALUE)
                                    .addComponent(isRecievedTextField))))
                        .addGap(0, 9, Short.MAX_VALUE))))
        );
        orderItemsPanelLayout.setVerticalGroup(
            orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, orderItemsPanelLayout.createSequentialGroup()
                .addContainerGap(23, Short.MAX_VALUE)
                .addComponent(orderItemsTableTitleLabel)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(requestedDurationLabel)
                    .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(orderItemsPanelLayout.createSequentialGroup()
                            .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5)
                                .addComponent(requestedToDeliverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addComponent(requestedForPickupTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(orderItemsPanelLayout.createSequentialGroup()
                            .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(existingRequestedFromLabel)
                                .addComponent(existingRequestedFromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(orderItemsPanelLayout.createSequentialGroup()
                                    .addGap(1, 1, 1)
                                    .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(isDeliveredTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel3))))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(existingRequestedToDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(existingRequestedToLabel))
                                .addGroup(orderItemsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(isRecievedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel4))))))
                .addGap(294, 294, 294))
        );

        jTabbedPane2.addTab("Order Items", orderItemsPanel);

        javax.swing.GroupLayout resultsPanelLayout = new javax.swing.GroupLayout(resultsPanel);
        resultsPanel.setLayout(resultsPanelLayout);
        resultsPanelLayout.setHorizontalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2)
        );
        resultsPanelLayout.setVerticalGroup(
            resultsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        searchPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search"));

        itemRequiredDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All time", "Time Period", " " }));

        searchButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        searchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Date", "Customer Name", "Company Name", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        searchResultsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchResultsTableMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(searchResultsTable);

        deleteOrderButton.setText("Remove Details of this Order");
        deleteOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteOrderButtonActionPerformed(evt);
            }
        });

        fromDateLabel.setText("From");

        toDateLabel.setText("To");

        statusComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Open", "Closed", "Both" }));

        itemRequestDateLabel.setText("Items requested");

        statusLabel.setText("Status");

        nicOrEmailLabel.setText("Customer NIC/Email");

        orderDateLabel.setText("Order placed");

        placedDateComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All time", "Time Period", " " }));

        fromDateLabel1.setText("From");

        toDateLabel1.setText("To");

        existingOrderIdLabel.setText("Order ID");

        javax.swing.GroupLayout searchPanelLayout = new javax.swing.GroupLayout(searchPanel);
        searchPanel.setLayout(searchPanelLayout);
        searchPanelLayout.setHorizontalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(deleteOrderButton)
                .addGap(11, 11, 11))
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(existingOrderIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(existingOrderIdLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderDateLabel)
                            .addComponent(placedDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(20, 20, 20)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(toDateLabel))
                            .addComponent(fromDateLabel))
                        .addGap(18, 18, 18)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(orderPlacedFromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(orderPlacedToDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(itemRequiredDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(itemRequestDateLabel))
                        .addGap(39, 39, 39)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromDateLabel1)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGap(6, 6, 6)
                                .addComponent(toDateLabel1)))
                        .addGap(18, 18, 18)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(itemsRequestedToDateChooser, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(itemsRequestedFromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(statusLabel)
                            .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(nicOrEmailLabel)
                            .addComponent(nicOrEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 179, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(searchButton)
                        .addGap(16, 16, 16))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane4)
                        .addContainerGap())))
        );
        searchPanelLayout.setVerticalGroup(
            searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addComponent(itemsRequestedFromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(itemsRequestedToDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(statusLabel)
                                    .addComponent(nicOrEmailLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(statusComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nicOrEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(searchButton)
                            .addGroup(searchPanelLayout.createSequentialGroup()
                                .addComponent(fromDateLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(toDateLabel1))))
                    .addGroup(searchPanelLayout.createSequentialGroup()
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fromDateLabel)
                            .addComponent(orderPlacedFromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(orderPlacedToDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                                .addComponent(itemRequestDateLabel)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(itemRequiredDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchPanelLayout.createSequentialGroup()
                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(orderDateLabel)
                                    .addComponent(existingOrderIdLabel))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(searchPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(placedDateComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(toDateLabel)
                                    .addComponent(existingOrderIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addGap(15, 15, 15)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 205, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(deleteOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout existingOrderDetailsPanelLayout = new javax.swing.GroupLayout(existingOrderDetailsPanel);
        existingOrderDetailsPanel.setLayout(existingOrderDetailsPanelLayout);
        existingOrderDetailsPanelLayout.setHorizontalGroup(
            existingOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(resultsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(searchPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        existingOrderDetailsPanelLayout.setVerticalGroup(
            existingOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(existingOrderDetailsPanelLayout.createSequentialGroup()
                .addComponent(searchPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(resultsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jTabbedPane1.addTab("Order details", existingOrderDetailsPanel);

        newOrderCustomerDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Customer details"));

        newOrderNicLabel.setText("NIC");

        newOrderCustomerNameLabel.setText("Customer Name");

        newOrderCustomerNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrderCustomerNameTextFieldActionPerformed(evt);
            }
        });

        newOrderBillingAddressLabel.setText("Billing Address");

        newOrderDestinationAddressLabel.setText("Destination Address");

        newOrderContactNumberLabel.setText("Contact Number");

        newOrderContactNumberTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrderContactNumberTextFieldActionPerformed(evt);
            }
        });

        nicSearchButton.setText("Search");
        nicSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nicSearchButtonActionPerformed(evt);
            }
        });

        newOrderCompanyNameLabel.setText("Company Name");

        newOrderCompanyNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrderCompanyNameTextFieldActionPerformed(evt);
            }
        });

        newOrderEmailLabel.setText("Email");

        emailSearchButton.setText("Search");
        emailSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                emailSearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newOrderCustomerDetailsPanelLayout = new javax.swing.GroupLayout(newOrderCustomerDetailsPanel);
        newOrderCustomerDetailsPanel.setLayout(newOrderCustomerDetailsPanelLayout);
        newOrderCustomerDetailsPanelLayout.setHorizontalGroup(
            newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                        .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(newOrderNicLabel)
                            .addComponent(newOrderCustomerNameLabel))
                        .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(newOrderNicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nicSearchButton)
                                .addGap(110, 110, 110))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newOrderCustomerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newOrderEmailLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newOrderEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(emailSearchButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newOrderCompanyNameLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newOrderCompanyNameTextField))))
                    .addGroup(newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newOrderDestinationAddressLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newOrderDestinationAddressTextField))
                    .addGroup(newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newOrderBillingAddressLabel)
                        .addGap(33, 33, 33)
                        .addComponent(newOrderBillingAddressTextField))
                    .addGroup(newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newOrderContactNumberLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newOrderContactNumberTextField)))
                .addContainerGap())
        );
        newOrderCustomerDetailsPanelLayout.setVerticalGroup(
            newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newOrderCustomerDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newOrderEmailLabel)
                        .addComponent(newOrderEmailTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(emailSearchButton))
                    .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newOrderNicLabel)
                        .addComponent(newOrderNicTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(nicSearchButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newOrderCompanyNameLabel)
                        .addComponent(newOrderCompanyNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newOrderCustomerNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(newOrderCustomerNameLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newOrderBillingAddressLabel)
                    .addComponent(newOrderBillingAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newOrderDestinationAddressLabel)
                    .addComponent(newOrderDestinationAddressTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newOrderCustomerDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newOrderContactNumberLabel)
                    .addComponent(newOrderContactNumberTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );

        newOrderDetailsPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Order Details"));

        searchItemPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Search Item"));

        searchItemComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Get all", "ID", " " }));

        searchItemButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        searchItemButton.setText("Search");
        searchItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchItemButtonActionPerformed(evt);
            }
        });

        itemSearchResultsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SKU", "Item name", "Availabe Quantity", "Rate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        itemSearchResultsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                itemSearchResultsTableMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(itemSearchResultsTable);

        javax.swing.GroupLayout searchItemPanelLayout = new javax.swing.GroupLayout(searchItemPanel);
        searchItemPanel.setLayout(searchItemPanelLayout);
        searchItemPanelLayout.setHorizontalGroup(
            searchItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(searchItemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchBarTextField)
                .addGap(18, 18, 18)
                .addComponent(searchItemButton)
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, searchItemPanelLayout.createSequentialGroup()
                .addComponent(jScrollPane5)
                .addContainerGap())
        );
        searchItemPanelLayout.setVerticalGroup(
            searchItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(searchItemPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(searchItemPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(searchItemComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchBarTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                .addGap(17, 17, 17))
        );

        addItemButton.setText("Add this item");
        addItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addItemButtondeleteUserButtonActionPerformed(evt);
            }
        });

        newOrderItemsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "SKU", "Item name", "Quantity", "Price"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        newOrderItemsTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newOrderItemsTableMouseClicked(evt);
            }
        });
        jScrollPane6.setViewportView(newOrderItemsTable);
        if (newOrderItemsTable.getColumnModel().getColumnCount() > 0) {
            newOrderItemsTable.getColumnModel().getColumn(3).setHeaderValue("Price");
        }

        removeItemButton.setText("Remove item from list");
        removeItemButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeItemButtondeleteUserButtonActionPerformed(evt);
            }
        });

        addNewOrderButton.setText("Add this order");
        addNewOrderButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addNewOrderButtonActionPerformed(evt);
            }
        });

        newOrderSkuLabel.setText("SKU");

        newOrderQtyRequestedLabel.setText("Quantity Requested");

        newOrderDurationLabel.setText("Duration");

        newOrderDurationFromLabel.setText("From");

        newOrderDurationToLabel.setText("To");

        newOrderTotalPriceForDurationLabel.setText("Total Price for the duration");

        newOrderSkuTextField.setEditable(false);

        newOrderLeaseAgreementLabel.setText("Lease Agreement");

        userManualUploadButton1.setText("Upload");
        userManualUploadButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userManualUploadButton1ActionPerformed(evt);
            }
        });

        userManualViewButton.setText("View");
        userManualViewButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userManualViewButtonActionPerformed(evt);
            }
        });

        userManualRemoveButton.setText("Remove");
        userManualRemoveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                userManualRemoveButtonActionPerformed(evt);
            }
        });

        newOrderIntallmentTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Installment Number", "Date", "Amount"
            }
        ));
        jScrollPane3.setViewportView(newOrderIntallmentTable);

        deliverTheItemsCheckBox.setText("Deliver these items");

        pickUpTheItemsCheckBox.setText("Pick up these items");

        downloadLeaseAgreementTemplateButton.setText("Download Lease Agreement Template for this order");

        newOrderIdLabel.setText("Order ID");

        newOrderTotalPriceForItemsLabel.setText("Total price for items");

        newOrderDeliveryChargesLabel.setText("Delivery charges");

        newOrderDiscountsLabel.setText("Discounts");

        newOrderNetTotalLabel.setText("Net total");

        calculateButton.setText("Calculate");
        calculateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                calculateButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Date");

        jLabel2.setText("Amount");

        newOrderAddInstallmentButton.setText("Add installment");
        newOrderAddInstallmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                newOrderAddInstallmentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout newOrderDetailsPanelLayout = new javax.swing.GroupLayout(newOrderDetailsPanel);
        newOrderDetailsPanel.setLayout(newOrderDetailsPanelLayout);
        newOrderDetailsPanelLayout.setHorizontalGroup(
            newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(searchItemPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                        .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newOrderLeaseAgreementLabel)
                                .addGap(51, 51, 51)
                                .addComponent(userManualUploadButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(newOrderLeaseAgreementFileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 281, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(userManualViewButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(userManualRemoveButton))
                            .addComponent(downloadLeaseAgreementTemplateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 684, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(newOrderTotalPriceForDurationLabel)
                            .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(18, 18, 18)
                                .addComponent(installmentDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(57, 57, 57)
                                .addComponent(newOrderAddInstallmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 538, Short.MAX_VALUE))
                    .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane6)
                        .addContainerGap())
                    .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                        .addComponent(jScrollPane3)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOrderDetailsPanelLayout.createSequentialGroup()
                        .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(newOrderSkuLabel)
                                    .addComponent(newOrderQtyRequestedLabel))
                                .addGap(152, 152, 152)
                                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(newOrderSkuTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 147, Short.MAX_VALUE)
                                    .addComponent(newOrderQtyRequestedTextField)
                                    .addComponent(newOrderTotalPriceForDurationTextField))
                                .addGap(18, 18, 18)
                                .addComponent(calculateButton)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                                .addComponent(deliverTheItemsCheckBox)
                                .addGap(18, 18, 18)
                                .addComponent(pickUpTheItemsCheckBox, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(removeItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                                .addComponent(newOrderTotalPriceForItemsLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(newOrderTotalPriceForItemsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(newOrderDeliveryChargesLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(newOrderDeliveryChargesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(46, 46, 46)
                                .addComponent(newOrderDiscountsLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newOrderDiscountsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(43, 43, 43)
                                .addComponent(newOrderNetTotalLabel)
                                .addGap(18, 18, 18)
                                .addComponent(newOrderNetTotalTextField)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(userManualFileNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOrderDetailsPanelLayout.createSequentialGroup()
                        .addComponent(newOrderDurationLabel)
                        .addGap(31, 31, 31)
                        .addComponent(newOrderDurationFromLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(newOrderDurationFromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(newOrderDurationToLabel)
                        .addGap(18, 18, 18)
                        .addComponent(newOrderDurationToDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(newOrderIdLabel)
                        .addGap(36, 36, 36)
                        .addComponent(newOrderIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 144, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOrderDetailsPanelLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOrderDetailsPanelLayout.createSequentialGroup()
                                .addComponent(addNewOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 279, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOrderDetailsPanelLayout.createSequentialGroup()
                                .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(9, 9, 9))))))
        );
        newOrderDetailsPanelLayout.setVerticalGroup(
            newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newOrderDetailsPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newOrderIdLabel)
                        .addComponent(newOrderIDTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newOrderDurationLabel)
                        .addComponent(newOrderDurationFromLabel)
                        .addComponent(newOrderDurationToLabel))
                    .addComponent(newOrderDurationFromDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(newOrderDurationToDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(searchItemPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newOrderSkuLabel)
                    .addComponent(newOrderSkuTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newOrderQtyRequestedLabel)
                    .addComponent(newOrderQtyRequestedTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newOrderTotalPriceForDurationLabel)
                    .addComponent(newOrderTotalPriceForDurationTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(calculateButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(addItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(20, 20, 20)
                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(removeItemButton, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(deliverTheItemsCheckBox)
                    .addComponent(pickUpTheItemsCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(userManualFileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(newOrderDiscountsLabel)
                        .addComponent(newOrderDiscountsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newOrderNetTotalLabel)
                        .addComponent(newOrderNetTotalTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newOrderTotalPriceForItemsLabel)
                        .addComponent(newOrderTotalPriceForItemsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newOrderDeliveryChargesLabel)
                        .addComponent(newOrderDeliveryChargesTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(33, 33, 33)
                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(installmentDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(newOrderAddInstallmentButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOrderDetailsPanelLayout.createSequentialGroup()
                        .addComponent(addNewOrderButton, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, newOrderDetailsPanelLayout.createSequentialGroup()
                        .addComponent(downloadLeaseAgreementTemplateButton)
                        .addGap(18, 18, 18)
                        .addGroup(newOrderDetailsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(newOrderLeaseAgreementLabel)
                            .addComponent(userManualUploadButton1)
                            .addComponent(newOrderLeaseAgreementFileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(userManualViewButton)
                            .addComponent(userManualRemoveButton))
                        .addGap(51, 51, 51))))
        );

        javax.swing.GroupLayout newOrderPanelLayout = new javax.swing.GroupLayout(newOrderPanel);
        newOrderPanel.setLayout(newOrderPanelLayout);
        newOrderPanelLayout.setHorizontalGroup(
            newOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(newOrderDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(newOrderPanelLayout.createSequentialGroup()
                .addComponent(newOrderCustomerDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        newOrderPanelLayout.setVerticalGroup(
            newOrderPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(newOrderPanelLayout.createSequentialGroup()
                .addComponent(newOrderCustomerDetailsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(newOrderDetailsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("New Order", newOrderPanel);

        invoicesToSendDateLabel.setText("Select date");

        invoicesToSendTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Installment Number", "Invoice sent", "Amount"
            }
        ));
        jScrollPane1.setViewportView(invoicesToSendTable);

        invoicesToSendSearchButton.setText("Search");
        invoicesToSendSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                invoicesToSendSearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(invoicesToSendDateLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(invoicesToSendDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(invoicesToSendSearchButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1218, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(invoicesToSendDateLabel)
                        .addComponent(invoicesToSendSearchButton))
                    .addComponent(invoicesToSendDateChooser, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1073, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Invoices to send", jPanel1);

        overduePaymentsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Order ID", "Payment Date", "Installment Number", "Invoice sent", "Amount"
            }
        ));
        jScrollPane2.setViewportView(overduePaymentsTable);

        overduePaymentsSearchButton.setText("Search");
        overduePaymentsSearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                overduePaymentsSearchButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(1070, Short.MAX_VALUE)
                .addComponent(overduePaymentsSearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(64, 64, 64))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1226, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(overduePaymentsSearchButton)
                .addContainerGap(1122, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel2Layout.createSequentialGroup()
                    .addGap(38, 38, 38)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 1073, Short.MAX_VALUE)
                    .addGap(39, 39, 39)))
        );

        jTabbedPane1.addTab("Overdue Payments", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1183, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    private void newOrderContactNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newOrderContactNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newOrderContactNumberTextFieldActionPerformed

    private void userManualRemoveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userManualRemoveButtonActionPerformed
        leaseAgreement = null;
        newOrderLeaseAgreementFileNameLabel.setText("");
    }//GEN-LAST:event_userManualRemoveButtonActionPerformed

    private void userManualViewButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userManualViewButtonActionPerformed
        if(leaseAgreement==null){
            JOptionPane.showMessageDialog(this, "Upload agreement Before Viewing");
            return;
        }
        if(!Desktop.isDesktopSupported())//check if Desktop is supported by Platform or not
        {
            JOptionPane.showMessageDialog(this, "View Feature Not Supported");
            return;
        }
        Desktop desktop = Desktop.getDesktop();
        if(leaseAgreement.exists()){ //checks file exists or not
            try {
                desktop.open(leaseAgreement);//opens the specified file
            } catch (IOException ex) {
                Logger.getLogger(EmployeesPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this, "File Does Not Exist");
        }
    }//GEN-LAST:event_userManualViewButtonActionPerformed
    File leaseAgreement;
    File existingLeaseAgreement;
    private void userManualUploadButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_userManualUploadButton1ActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showDialog(this,"Upload");
        if(returnVal==0){ //If file selected 0, otherwise 1
            leaseAgreement = fc.getSelectedFile();
            newOrderLeaseAgreementFileNameLabel.setText(leaseAgreement.getName());
        }
    }//GEN-LAST:event_userManualUploadButton1ActionPerformed

    private void removeItemButtondeleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeItemButtondeleteUserButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Remove this item?");
        if(showConfirmDialog!=0){return;}
        int selectedRow = searchResultsTable.getSelectedRow();
        if(selectedRow==-1){
            return;
        }
        DefaultTableModel dtm=(DefaultTableModel) newOrderItemsTable.getModel();
        dtm.removeRow(selectedRow);
    }//GEN-LAST:event_removeItemButtondeleteUserButtonActionPerformed

    private void newOrderItemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newOrderItemsTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_newOrderItemsTableMouseClicked

    private void addItemButtondeleteUserButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addItemButtondeleteUserButtonActionPerformed
        int selectedRow = itemSearchResultsTable.getSelectedRow();
        if(selectedRow==-1){
            JOptionPane.showMessageDialog(this, "Please select an item first");
            return;
        }
        
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Add this item?");
        if(showConfirmDialog!=0){return;}
        
        
        String sku=newOrderSkuTextField.getText();
        String name = String.valueOf(itemSearchResultsTable.getValueAt(selectedRow, 1));
        String qty=newOrderQtyRequestedTextField.getText();
        String price= newOrderTotalPriceForDurationTextField.getText();
        DefaultTableModel dtm=(DefaultTableModel) newOrderItemsTable.getModel();
        dtm.addRow(new Object[]{sku,name,qty,price});
    }//GEN-LAST:event_addItemButtondeleteUserButtonActionPerformed

    private void itemSearchResultsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_itemSearchResultsTableMouseClicked
        int selectedRow = itemSearchResultsTable.getSelectedRow();
        String SKU= String.valueOf(itemSearchResultsTable.getValueAt(selectedRow,0));
        newOrderSkuTextField.setText(SKU);
    }//GEN-LAST:event_itemSearchResultsTableMouseClicked

    private void searchItemButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchItemButtonActionPerformed
        
        int index = searchItemComboBox.getSelectedIndex();
        String searchItem = searchBarTextField.getText();
        DefaultTableModel dtm=(DefaultTableModel)itemSearchResultsTable.getModel();
        dtm.setRowCount(0);
        ArrayList<ItemDTO> allItems;
        if(index==0){
            allItems= itemController.getItemForOrders();
            for(ItemDTO item: allItems){
                String SKU = item.getSku();
                String name = item.getName();
                int existingQty = item.getExistingQty();
                double rate = item.getRate();
                dtm.addRow(new Object[]{SKU,name,existingQty,rate});
            }
        }else if(index==1){
            ItemDTO item= itemController.getItemBySKU(searchBarTextField.getText());
            String SKU = item.getSku();
            String name = item.getName();
            int existingQty = item.getExistingQty();
            double rate = item.getRate();
            dtm.addRow(new Object[]{SKU,name,existingQty,rate});
        }  
    }//GEN-LAST:event_searchItemButtonActionPerformed

    private void newOrderCustomerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newOrderCustomerNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newOrderCustomerNameTextFieldActionPerformed

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String searchOrderId = existingOrderIdTextField.getText();
        int placedDate = placedDateComboBox.getSelectedIndex();
        int itemRequested=itemRequiredDateComboBox.getSelectedIndex();
        int statusIndex = statusComboBox.getSelectedIndex();
        String nicOrEmail = nicOrEmailTextField.getText();
        Date orderPlacedFrom = orderPlacedFromDateChooser.getDate();
        Date orderPlacedTo = orderPlacedToDateChooser.getDate();
        LocalDate orderPlacedFromDate=null;
        if(orderPlacedFrom!=null)orderPlacedFromDate=LocalDate.parse(orderPlacedFrom.toInstant().atZone(ZoneId.of("GMT")).format(DateTimeFormatter.ofPattern("yyyy-MM-dd")));
        LocalDate orderPlacedToDate=null;
        if(orderPlacedTo!=null)orderPlacedToDate=LocalDate.parse(orderPlacedTo.toInstant().atZone(ZoneId.of("GMT")).format(DateTimeFormatter.ofPattern("yyyy-MM-dd")));
        
        Date itemRequestedFrom = itemsRequestedFromDateChooser.getDate();
        Date itemRequestedTo = itemsRequestedToDateChooser.getDate();
        LocalDate itemRequestedFromDate=null;
        if(itemRequestedFrom!=null)itemRequestedFromDate=LocalDate.parse(itemRequestedFrom.toInstant().atZone(ZoneId.of("GMT")).format(DateTimeFormatter.ofPattern("yyyy-MM-dd")));
        LocalDate itemRequestedToDate=null;
        if(itemRequestedTo!=null)itemRequestedToDate=LocalDate.parse(itemRequestedTo.toInstant().atZone(ZoneId.of("GMT")).format(DateTimeFormatter.ofPattern("yyyy-MM-dd")));
        
        
        
        if(placedDate==2 &&(orderPlacedFrom==null || orderPlacedTo==null)){
            JOptionPane.showMessageDialog(this, "Please enter the time period");
            return;
        }
        if(itemRequested==2 &&(itemRequestedFrom==null || itemRequestedTo==null)){
            JOptionPane.showMessageDialog(this, "Please enter the time period");
            return;
        }
        DefaultTableModel dtm=(DefaultTableModel)searchResultsTable.getModel();
        dtm.setRowCount(0);
        ArrayList<OrderDTO> arr= orderController.search(searchOrderId,placedDate,orderPlacedFromDate,orderPlacedToDate,itemRequested,itemRequestedFromDate,itemRequestedToDate,statusIndex,nicOrEmail);
        for(OrderDTO order:arr){
            String orderId=order.getOrderId();
            LocalDate date=order.getOrderDate();
            CustomerDTO search = customerController.search(order.getCustomerId());
            String customerName= search.getName();
            String companyName= search.getCompanyName();
            String status= order.getStatus();
            dtm.addRow(new Object[]{orderId,date,customerName,companyName,status});
        }
    }//GEN-LAST:event_searchButtonActionPerformed
    
    private void searchResultsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchResultsTableMouseClicked
        
        int selectedRow = searchResultsTable.getSelectedRow();
        String ID= String.valueOf(searchResultsTable.getValueAt(selectedRow,0));
        OrderDTO order = orderController.search(ID);
        CustomerDTO customer = customerController.search(order.getCustomerId());
        existingOrderNicTextField.setText(customer.getNic());
        existingOrderEmailTextField.setText(customer.getEmail());
        if(!existingOrderEmailTextField.equals("")){
            emailInvoiceButton.setEnabled(true);
            emailRecieptButton.setEnabled(true);
        }
        
        existingOrderCustomerNameTextField.setText(customer.getName());
        existingOrderCompanyNameTextField.setText(customer.getCompanyName());
        
        existingOrderContactNumberTextField.setText(customer.getContact());
        
        existingOrderTotalPriceForItemsTextField.setText(""+order.getTotalPriceForItems());
        existingOrderDeliveryChargesTextField.setText(""+order.getDeliveryCharges());
        existingOrderDiscountsTextField.setText(""+order.getDiscount());
        existingOrderNetTotalTextField.setText(""+order.getNetTotal());
        existingOrderBillingAddressTextField.setText(order.getBillingAddress());
        existingOrderDestinationTextField.setText(order.getLocation());
        existingLeaseAgreement= order.getLeaseAgreement();
        existingLeaseAgreementFileNameLabel.setText(existingLeaseAgreement.getName());
        
        ArrayList<OrderItemDTO> orderItems= order.getItems();
        DefaultTableModel dtm = (DefaultTableModel)orderItemsTable.getModel();
        dtm.setRowCount(0);
        for(OrderItemDTO item:orderItems){
            dtm.addRow(new Object[]{item.getSku(),item.getName(),item.getQty(),item.getTotalPrice()});
        }
        ArrayList<InstallmentDTO> installments= order.getInstallments();
        DefaultTableModel dtm2 = (DefaultTableModel)existingInstallmentsTable.getModel();
        dtm2.setRowCount(0);
        for(InstallmentDTO installment:installments){
            dtm2.addRow(new Object[]{installment.getNumber(),installment.getDate(),installment.getAmount(),installment.isInvoiceIssued(),installment.isPaid()});
        }
        existingRequestedFromDateChooser.setDate(Date.from(order.getFrom().atStartOfDay(ZoneId.of("GMT")).toInstant()));
        existingRequestedToDateChooser.setDate(Date.from(order.getTo().atStartOfDay(ZoneId.of("GMT")).toInstant()));
        requestedToDeliverTextField.setText(order.isDeliver()?"Yes":"No");
        requestedForPickupTextField.setText(order.isPickup()?"Yes":"No");
        isDeliveredTextField.setText(order.isDelivered()?"Yes":"No");
        isRecievedTextField.setText(order.isPickedUp()?"Yes":"No");
    }//GEN-LAST:event_searchResultsTableMouseClicked

    private void deleteOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteOrderButtonActionPerformed
        emailInvoiceButton.setEnabled(false);
        emailRecieptButton.setEnabled(false);
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Delete all records of this order?");
        if(showConfirmDialog!=0){return;}
        int selectedRow = searchResultsTable.getSelectedRow();
        if(selectedRow==-1){
            return;
        }
        boolean status=orderController.delete(String.valueOf(searchResultsTable.getValueAt(selectedRow, 0)));
        if(status){
            JOptionPane.showMessageDialog(this, "Deleted order records");
            DefaultTableModel model = (DefaultTableModel)searchResultsTable.getModel();
            model.removeRow(selectedRow); 
        }else{
            JOptionPane.showMessageDialog(this, "Failed to delete order records");
        }
    }//GEN-LAST:event_deleteOrderButtonActionPerformed

    private void newOrderCompanyNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newOrderCompanyNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_newOrderCompanyNameTextFieldActionPerformed

    private void existingOrderCustomerNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingOrderCustomerNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existingOrderCustomerNameTextFieldActionPerformed

    private void existingOrderContactNumberTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingOrderContactNumberTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existingOrderContactNumberTextFieldActionPerformed

    private void existingOrderCompanyNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_existingOrderCompanyNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_existingOrderCompanyNameTextFieldActionPerformed

    private void uploadExistingLeaseAgreementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadExistingLeaseAgreementButtonActionPerformed
        final JFileChooser fc = new JFileChooser();
        int returnVal = fc.showDialog(this,"Upload");
        if(returnVal==0){ //If file selected 0, otherwise 1
            existingLeaseAgreement = fc.getSelectedFile();
            existingLeaseAgreementFileNameLabel.setText(existingLeaseAgreement.getName());
        }
    }//GEN-LAST:event_uploadExistingLeaseAgreementButtonActionPerformed

    private void viewExistingLeaseAgreementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewExistingLeaseAgreementButtonActionPerformed
        if(existingLeaseAgreement==null){
            JOptionPane.showMessageDialog(this, "Upload agreement Before Viewing");
            return;
        }
        if(!Desktop.isDesktopSupported())//check if Desktop is supported by Platform or not
        {
            JOptionPane.showMessageDialog(this, "View Feature Not Supported");
            return;
        }
        Desktop desktop = Desktop.getDesktop();
        if(existingLeaseAgreement.exists()){ //checks file exists or not
            try {
                desktop.open(existingLeaseAgreement);//opens the specified file
            } catch (IOException ex) {
                Logger.getLogger(EmployeesPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            JOptionPane.showMessageDialog(this, "File Does Not Exist");
        }
    }//GEN-LAST:event_viewExistingLeaseAgreementButtonActionPerformed

    private void removeExistingLeaseAgreementButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeExistingLeaseAgreementButtonActionPerformed
        existingLeaseAgreement = null;
        existingLeaseAgreementFileNameLabel.setText("");
    }//GEN-LAST:event_removeExistingLeaseAgreementButtonActionPerformed

    private void orderItemsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_orderItemsTableMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_orderItemsTableMouseClicked

    private void nicSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nicSearchButtonActionPerformed
        CustomerDTO customer = customerController.search(newOrderNicTextField.getText());
        if(customer==null){
            JOptionPane.showMessageDialog(this, "No customer with this NIC number");
            return;
        }
        newOrderNicTextField.setText(customer.getNic());
        newOrderEmailTextField.setText(customer.getEmail());
        newOrderCustomerNameTextField.setText(customer.getName());
        newOrderCompanyNameTextField.setText(customer.getCompanyName());
        newOrderDestinationAddressTextField.setText(customer.getDestinationAddress());
        newOrderBillingAddressTextField.setText(customer.getBillingAddress());
        newOrderContactNumberTextField.setText(customer.getContact());
    }//GEN-LAST:event_nicSearchButtonActionPerformed

    private void emailSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailSearchButtonActionPerformed
        CustomerDTO customer = customerController.search(newOrderEmailTextField.getText());
        if(customer==null){
            JOptionPane.showMessageDialog(this, "No customer with this email");
            return;
        }
        newOrderNicTextField.setText(customer.getNic());
        newOrderEmailTextField.setText(customer.getEmail());
        newOrderCustomerNameTextField.setText(customer.getName());
        newOrderCompanyNameTextField.setText(customer.getCompanyName());
        newOrderDestinationAddressTextField.setText(customer.getDestinationAddress());
        newOrderBillingAddressTextField.setText(customer.getBillingAddress());
        newOrderContactNumberTextField.setText(customer.getContact());
    }//GEN-LAST:event_emailSearchButtonActionPerformed

    private void calculateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_calculateButtonActionPerformed
        int qtyRequested = Integer.valueOf(newOrderQtyRequestedTextField.getText());
        int selectedRow = itemSearchResultsTable.getSelectedRow();
        double rate= Double.valueOf(String.valueOf(itemSearchResultsTable.getValueAt(selectedRow,3)));
    }//GEN-LAST:event_calculateButtonActionPerformed

    private void newOrderAddInstallmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_newOrderAddInstallmentButtonActionPerformed
        int installmentNo=newOrderIntallmentTable.getRowCount()+1;
        LocalDate date= LocalDate.parse(installmentDateChooser.getDate().toInstant().atZone(ZoneId.of("GMT")).format(DateTimeFormatter.ofPattern("yyyy-MM-dd")));
        String stringDate=date.format(DateTimeFormatter.ISO_DATE);
        String amount=amountTextField.getText();
        DefaultTableModel dtm= (DefaultTableModel) newOrderIntallmentTable.getModel();
        dtm.addRow(new Object[]{installmentNo,stringDate,amount});
    }//GEN-LAST:event_newOrderAddInstallmentButtonActionPerformed

    private void addNewOrderButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addNewOrderButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Add this order?");
        if(showConfirmDialog!=0){return;}
        String nic=newOrderNicTextField.getText();
        String name=newOrderCustomerNameTextField.getText();
        String companyName=newOrderCompanyNameLabel.getText();
        String billingAddress=newOrderBillingAddressTextField.getText();
        String location=newOrderDestinationAddressTextField.getText();
        String contactNumber=newOrderContactNumberTextField.getText();
        String email=newOrderEmailTextField.getText();
        String password="";
        //String nic, String name, String companyName, String email, String password,String billingAddress, String destinationAddress, String contact
        boolean addCustomerStatus=customerController.setGeneralDetails(new CustomerDTO(nic, name, companyName, email, password, billingAddress, location, contactNumber));
        
        String orderId=newOrderIDTextField.getText();
        LocalDate dateFrom= LocalDate.parse(newOrderDurationFromDateChooser.getDate().toInstant().atZone(ZoneId.of("GMT")).format(DateTimeFormatter.ofPattern("yyyy-MM-dd")));
        LocalDate dateTo= LocalDate.parse(newOrderDurationToDateChooser.getDate().toInstant().atZone(ZoneId.of("GMT")).format(DateTimeFormatter.ofPattern("yyyy-MM-dd")));
        double totalPriceForItems= Double.parseDouble(newOrderTotalPriceForItemsTextField.getText());
        double deliveryCharges= Double.parseDouble(newOrderDeliveryChargesTextField.getText());
        double discounts= Double.parseDouble(newOrderDiscountsTextField.getText());
        double netTotal= Double.parseDouble(newOrderNetTotalTextField.getText());
        ArrayList<OrderItemDTO> items=new ArrayList<>();
        int rowCount=newOrderItemsTable.getRowCount();
        for(int i=0; i<rowCount; i++){
            String sku= String.valueOf(newOrderItemsTable.getValueAt(i, 0));
            String itemName=String.valueOf(newOrderItemsTable.getValueAt(i, 1));
            int quantity= Integer.parseInt(String.valueOf(newOrderItemsTable.getValueAt(i, 2)));
            double price= Double.parseDouble(String.valueOf(newOrderItemsTable.getValueAt(i, 3)));
            items.add(new OrderItemDTO(sku,itemName,quantity,price));
        }
        ArrayList<InstallmentDTO> installments=new ArrayList<>();
        int rowCount2=newOrderIntallmentTable.getRowCount();
        for(int i=0; i<rowCount2; i++){
            int number= Integer.parseInt(String.valueOf(newOrderIntallmentTable.getValueAt(i, 0)));
            LocalDate date= LocalDate.parse(String.valueOf(newOrderIntallmentTable.getValueAt(i, 1)));
            double price= Double.parseDouble(String.valueOf(newOrderIntallmentTable.getValueAt(i, 2)));
            installments.add(new InstallmentDTO(number,price,date,false,false));
        }
        boolean deliver=deliverTheItemsCheckBox.isSelected();
        boolean pickup=pickUpTheItemsCheckBox.isSelected();
        String customerId;
        if(newOrderEmailTextField.getText().equals("")){
            customerId= nic;
        }else{
            customerId= email;
        }
        LocalDate today= LocalDate.now();
        String status="open";
        OrderDTO order=new OrderDTO(customerId, orderId, dateFrom, dateTo, totalPriceForItems, deliveryCharges, discounts, netTotal, items, installments, deliver, pickup,leaseAgreement,today,status,location,billingAddress);
        //String customerId, String orderId, LocalDate from, LocalDate to, double totalPriceForItems, double deliveryCharges, double discount, double netTotal, ArrayList<OrderItemDTO> items, ArrayList<InstallmentDTO> installments, boolean deliver, boolean pickup
        boolean addOrderStatus=orderController.add(order);
        if(addCustomerStatus&&addOrderStatus){
            JOptionPane.showMessageDialog(this, "Order added");
        }else{
            JOptionPane.showMessageDialog(this, "Failed to add order");
        }
    }//GEN-LAST:event_addNewOrderButtonActionPerformed

    private void existingInstallmentsTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_existingInstallmentsTableMouseClicked
        int selectedRow = existingInstallmentsTable.getSelectedRow();
        existingInstallmentNumberTextField.setText(String.valueOf(existingInstallmentsTable.getValueAt(selectedRow, 0)));
    }//GEN-LAST:event_existingInstallmentsTableMouseClicked

    private void closeOrderCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_closeOrderCheckBoxActionPerformed
        String orderId=String.valueOf(searchResultsTable.getValueAt(searchResultsTable.getSelectedRow(), 0));
        boolean status;
        if(closeOrderCheckBox.isSelected()){           
            status=orderController.setOrderStatus(orderId,"closed");
        }else{
            status=orderController.setOrderStatus(orderId,"open");
        }
        if(status)JOptionPane.showMessageDialog(this,"Order updated");
        else JOptionPane.showMessageDialog(this,"Failed to update order detatils");
    }//GEN-LAST:event_closeOrderCheckBoxActionPerformed

    private void emailInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailInvoiceButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Email invoice?");
        if(showConfirmDialog!=0){return;}
        int selectedRow=searchResultsTable.getSelectedRow();
        int selectedRow2=existingInstallmentsTable.getSelectedRow();
        String amount=String.valueOf(existingInstallmentsTable.getValueAt(selectedRow2, 2));
        String orderId=String.valueOf(searchResultsTable.getValueAt(selectedRow,0));
        String customerName=String.valueOf(searchResultsTable.getValueAt(selectedRow,2));
        int installmentNo=Integer.parseInt(String.valueOf(existingInstallmentsTable.getValueAt(selectedRow, 0)));
        boolean invoiceIssued=true;
        boolean status=orderController.setInstallmentInvoice(orderId,installmentNo,invoiceIssued);
        
        HashMap<String ,Object> parameters=new HashMap<>();
        
        parameters.put("orderId",orderId);
        parameters.put("installmentNo",""+installmentNo);
        parameters.put("billingAddress",existingOrderBillingAddressTextField.getText());
        parameters.put("invoiceNumber",orderId+installmentNo);
        parameters.put("customerName",customerName);
        parameters.put("amount",amount);
        try {
            JasperReport jasperReport= (JasperReport) JRLoader.loadObject(getClass().getResource("/invoice.jasper"));
            JasperPrint jp= JasperFillManager.fillReport(jasperReport, parameters, new JREmptyDataSource());
            JasperExportManager.exportReportToPdfFile(jp,System.getProperty("user.home") + "/Desktop/OrderFiles/invoice.pdf");
            orderController.sendInvoiceAsEmail(new File(System.getProperty("user.home") + "/Desktop/OrderFiles/invoice.pdf"),existingOrderEmailTextField.getText());
            JOptionPane.showMessageDialog(this,"Invoice sent");
        } catch (JRException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"Failed to send invoice");
        }
    }//GEN-LAST:event_emailInvoiceButtonActionPerformed

    private void emailRecieptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_emailRecieptButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Mark this installment as paid and email reciept?");
        if(showConfirmDialog!=0){return;}
        String orderId=String.valueOf(searchResultsTable.getValueAt(searchResultsTable.getSelectedRow(), 0));
        boolean status=orderController.setInstallmentPayment(orderId,Integer.parseInt(existingInstallmentNumberTextField.getText()),true);       
        if(status)JOptionPane.showMessageDialog(this,"Payment detatils updated");
        else JOptionPane.showMessageDialog(this,"Failed to update payment detatils");
        
       
        int selectedRow=searchResultsTable.getSelectedRow();
        int selectedRow2=existingInstallmentsTable.getSelectedRow();
        String amount=String.valueOf(existingInstallmentsTable.getValueAt(selectedRow2, 2));
        String customerName=String.valueOf(searchResultsTable.getValueAt(selectedRow,2));
        int installmentNo=Integer.parseInt(String.valueOf(existingInstallmentsTable.getValueAt(selectedRow, 0)));
       
        
        HashMap<String ,Object> parameters=new HashMap<>();
        
        parameters.put("orderId",orderId);
        parameters.put("installmentNo",""+installmentNo);
        parameters.put("billingAddress",existingOrderBillingAddressTextField.getText());
        parameters.put("invoiceNumber",orderId+installmentNo);
        parameters.put("customerName",customerName);
        parameters.put("amount",amount);
        try {
            JasperReport jasperReport= (JasperReport) JRLoader.loadObject(getClass().getResource("/receipt.jasper"));
            JasperPrint jp= JasperFillManager.fillReport(jasperReport, parameters, new JREmptyDataSource());      
            JasperExportManager.exportReportToPdfFile(jp,System.getProperty("user.home") + "/Desktop/OrderFiles/receipt.pdf");
            orderController.sendReceiptAsEmail(new File(System.getProperty("user.home") + "/Desktop/OrderFiles/receipt.pdf"),existingOrderEmailTextField.getText());
            JOptionPane.showMessageDialog(this,"Receipt sent");
        } catch (JRException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this,"Failed to send receipt");
        }
    }//GEN-LAST:event_emailRecieptButtonActionPerformed

    private void printInvoiceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printInvoiceButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Print invoice?");
        if(showConfirmDialog!=0){return;}
        int selectedRow=searchResultsTable.getSelectedRow();
        int selectedRow2=existingInstallmentsTable.getSelectedRow();
        String amount=String.valueOf(existingInstallmentsTable.getValueAt(selectedRow2, 2));
        String orderId=String.valueOf(searchResultsTable.getValueAt(selectedRow,0));
        String customerName=String.valueOf(searchResultsTable.getValueAt(selectedRow,2));
        int installmentNo=Integer.parseInt(String.valueOf(existingInstallmentsTable.getValueAt(selectedRow2, 0)));
        boolean invoiceIssued=true;
        boolean status=orderController.setInstallmentInvoice(orderId,installmentNo,invoiceIssued);
        
        HashMap<String ,Object> parameters=new HashMap<>();
        
        parameters.put("orderId",orderId);
        parameters.put("installmentNo",""+installmentNo);
        parameters.put("billingAddress",existingOrderBillingAddressTextField.getText());
        parameters.put("invoiceNumber",orderId+installmentNo);
        parameters.put("customerName",customerName);
        parameters.put("amount",amount);
        try {
            JasperReport jasperReport= (JasperReport) JRLoader.loadObject(getClass().getResource("/invoice.jasper"));
            JasperPrint jp= JasperFillManager.fillReport(jasperReport, parameters, new JREmptyDataSource());
            JasperViewer.viewReport(jp, false);
        } catch (JRException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_printInvoiceButtonActionPerformed

    private void printRecieptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printRecieptButtonActionPerformed
        int showConfirmDialog = JOptionPane.showConfirmDialog(this, "Print reciept?");
        if(showConfirmDialog!=0){return;}
        String orderId=String.valueOf(searchResultsTable.getValueAt(searchResultsTable.getSelectedRow(), 0));
        boolean status=orderController.setInstallmentPayment(orderId,Integer.parseInt(existingInstallmentNumberTextField.getText()),true);
        if(status)JOptionPane.showMessageDialog(this,"Payment detatils updated");
        else JOptionPane.showMessageDialog(this,"Failed to update payment detatils");
       
        int selectedRow=searchResultsTable.getSelectedRow();
        int selectedRow2=existingInstallmentsTable.getSelectedRow();
        String amount=String.valueOf(existingInstallmentsTable.getValueAt(selectedRow2, 2));
        String customerName=String.valueOf(searchResultsTable.getValueAt(selectedRow,2));
        int installmentNo=Integer.parseInt(String.valueOf(existingInstallmentsTable.getValueAt(selectedRow, 0)));
       
        
        HashMap<String ,Object> parameters=new HashMap<>();
        
        parameters.put("orderId",orderId);
        parameters.put("installmentNo",""+installmentNo);
        parameters.put("billingAddress",existingOrderBillingAddressTextField.getText());
        parameters.put("invoiceNumber",orderId+installmentNo);
        parameters.put("customerName",customerName);
        parameters.put("amount",amount);
        try {
            JasperReport jasperReport= (JasperReport) JRLoader.loadObject(getClass().getResource("/receipt.jasper"));
            JasperPrint jp= JasperFillManager.fillReport(jasperReport, parameters, new JREmptyDataSource());
            JasperViewer.viewReport(jp, false);
        } catch (JRException ex) {
            ex.printStackTrace();
        }
        
    }//GEN-LAST:event_printRecieptButtonActionPerformed

    private void invoicesToSendSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_invoicesToSendSearchButtonActionPerformed
        LocalDate date=LocalDate.parse(invoicesToSendDateChooser.getDate().toInstant().atZone(ZoneId.of("GMT")).format(DateTimeFormatter.ofPattern("yyyy-MM-dd")));
        ArrayList<InstallmentDTO> arr=orderController.getPaymentsForTheDate(date);      
        
        DefaultTableModel dtm= (DefaultTableModel) invoicesToSendTable.getModel();      
        dtm.setRowCount(0);
        for(InstallmentDTO installment: arr){
            dtm.addRow(new Object[]{installment.getOrderId(),installment.getNumber(),installment.isInvoiceIssued()?"Yes":"No",installment.getAmount()});
        }
    }//GEN-LAST:event_invoicesToSendSearchButtonActionPerformed

    private void overduePaymentsSearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_overduePaymentsSearchButtonActionPerformed
        ArrayList<InstallmentDTO> arr=orderController.getOverduePayments(LocalDate.now());
        DefaultTableModel dtm= (DefaultTableModel) overduePaymentsTable.getModel(); 
        dtm.setRowCount(0);
        for(InstallmentDTO installment: arr){
            dtm.addRow(new Object[]{installment.getOrderId(),installment.getDate(),installment.getNumber(),installment.isInvoiceIssued()?"Yes":"No",installment.getAmount()});
        }
    }//GEN-LAST:event_overduePaymentsSearchButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addItemButton;
    private javax.swing.JButton addNewOrderButton;
    private javax.swing.JTextField amountTextField;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton calculateButton;
    private javax.swing.JCheckBox closeOrderCheckBox;
    private javax.swing.JButton deleteOrderButton;
    private javax.swing.JCheckBox deliverTheItemsCheckBox;
    private javax.swing.JButton downloadLeaseAgreementTemplateButton;
    private javax.swing.JButton emailInvoiceButton;
    private javax.swing.JButton emailRecieptButton;
    private javax.swing.JButton emailSearchButton;
    private javax.swing.JLabel existingBillingAddressLabel;
    private javax.swing.JLabel existingCompanyNameLabel;
    private javax.swing.JLabel existingContactNumberLabel;
    private javax.swing.JPanel existingCustomerDetailsPanel;
    private javax.swing.JLabel existingCustomerLabel;
    private javax.swing.JLabel existingDeliveryChargesLabel;
    private javax.swing.JLabel existingDestinationLabel;
    private javax.swing.JLabel existingDiscountsLabel;
    private javax.swing.JLabel existingEmailLabel;
    private javax.swing.JTextField existingInstallmentNumberTextField;
    private javax.swing.JTable existingInstallmentsTable;
    private javax.swing.JLabel existingLeaseAgreementFileNameLabel;
    private javax.swing.JLabel existingLeaseAgreementLabel;
    private javax.swing.JLabel existingNetTotalLabel;
    private javax.swing.JLabel existingNicLabel;
    private javax.swing.JTextField existingOrderBillingAddressTextField;
    private javax.swing.JTextField existingOrderCompanyNameTextField;
    private javax.swing.JTextField existingOrderContactNumberTextField;
    private javax.swing.JTextField existingOrderCustomerNameTextField;
    private javax.swing.JTextField existingOrderDeliveryChargesTextField;
    private javax.swing.JTextField existingOrderDestinationTextField;
    private javax.swing.JPanel existingOrderDetailsPanel;
    private javax.swing.JTextField existingOrderDiscountsTextField;
    private javax.swing.JTextField existingOrderEmailTextField;
    private javax.swing.JLabel existingOrderIdLabel;
    private javax.swing.JTextField existingOrderIdTextField;
    private javax.swing.JTextField existingOrderNetTotalTextField;
    private javax.swing.JTextField existingOrderNicTextField;
    private javax.swing.JTextField existingOrderTotalPriceForItemsTextField;
    private com.toedter.calendar.JDateChooser existingRequestedFromDateChooser;
    private javax.swing.JLabel existingRequestedFromLabel;
    private com.toedter.calendar.JDateChooser existingRequestedToDateChooser;
    private javax.swing.JLabel existingRequestedToLabel;
    private javax.swing.JLabel existingTotalPriceForItemsLabel;
    private javax.swing.JLabel fromDateLabel;
    private javax.swing.JLabel fromDateLabel1;
    private com.toedter.calendar.JDateChooser installmentDateChooser;
    private javax.swing.JLabel installmentNumberLabel;
    private com.toedter.calendar.JDateChooser invoicesToSendDateChooser;
    private javax.swing.JLabel invoicesToSendDateLabel;
    private javax.swing.JButton invoicesToSendSearchButton;
    private javax.swing.JTable invoicesToSendTable;
    private javax.swing.JTextField isDeliveredTextField;
    private javax.swing.JTextField isRecievedTextField;
    private javax.swing.JLabel itemRequestDateLabel;
    private javax.swing.JComboBox<String> itemRequiredDateComboBox;
    private javax.swing.JTable itemSearchResultsTable;
    private com.toedter.calendar.JDateChooser itemsRequestedFromDateChooser;
    private com.toedter.calendar.JDateChooser itemsRequestedToDateChooser;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JButton newOrderAddInstallmentButton;
    private javax.swing.JLabel newOrderBillingAddressLabel;
    private javax.swing.JTextField newOrderBillingAddressTextField;
    private javax.swing.JLabel newOrderCompanyNameLabel;
    private javax.swing.JTextField newOrderCompanyNameTextField;
    private javax.swing.JLabel newOrderContactNumberLabel;
    private javax.swing.JTextField newOrderContactNumberTextField;
    private javax.swing.JPanel newOrderCustomerDetailsPanel;
    private javax.swing.JLabel newOrderCustomerNameLabel;
    private javax.swing.JTextField newOrderCustomerNameTextField;
    private javax.swing.JLabel newOrderDeliveryChargesLabel;
    private javax.swing.JTextField newOrderDeliveryChargesTextField;
    private javax.swing.JLabel newOrderDestinationAddressLabel;
    private javax.swing.JTextField newOrderDestinationAddressTextField;
    private javax.swing.JPanel newOrderDetailsPanel;
    private javax.swing.JLabel newOrderDiscountsLabel;
    private javax.swing.JTextField newOrderDiscountsTextField;
    private com.toedter.calendar.JDateChooser newOrderDurationFromDateChooser;
    private javax.swing.JLabel newOrderDurationFromLabel;
    private javax.swing.JLabel newOrderDurationLabel;
    private com.toedter.calendar.JDateChooser newOrderDurationToDateChooser;
    private javax.swing.JLabel newOrderDurationToLabel;
    private javax.swing.JLabel newOrderEmailLabel;
    private javax.swing.JTextField newOrderEmailTextField;
    private javax.swing.JTextField newOrderIDTextField;
    private javax.swing.JLabel newOrderIdLabel;
    private javax.swing.JTable newOrderIntallmentTable;
    private javax.swing.JTable newOrderItemsTable;
    private javax.swing.JLabel newOrderLeaseAgreementFileNameLabel;
    private javax.swing.JLabel newOrderLeaseAgreementLabel;
    private javax.swing.JLabel newOrderNetTotalLabel;
    private javax.swing.JTextField newOrderNetTotalTextField;
    private javax.swing.JLabel newOrderNicLabel;
    private javax.swing.JTextField newOrderNicTextField;
    private javax.swing.JPanel newOrderPanel;
    private javax.swing.JLabel newOrderQtyRequestedLabel;
    private javax.swing.JTextField newOrderQtyRequestedTextField;
    private javax.swing.JLabel newOrderSkuLabel;
    private javax.swing.JTextField newOrderSkuTextField;
    private javax.swing.JLabel newOrderTotalPriceForDurationLabel;
    private javax.swing.JTextField newOrderTotalPriceForDurationTextField;
    private javax.swing.JLabel newOrderTotalPriceForItemsLabel;
    private javax.swing.JTextField newOrderTotalPriceForItemsTextField;
    private javax.swing.JLabel nicOrEmailLabel;
    private javax.swing.JTextField nicOrEmailTextField;
    private javax.swing.JButton nicSearchButton;
    private javax.swing.JLabel orderDateLabel;
    private javax.swing.JPanel orderItemsPanel;
    private javax.swing.JTable orderItemsTable;
    private javax.swing.JLabel orderItemsTableTitleLabel;
    private com.toedter.calendar.JDateChooser orderPlacedFromDateChooser;
    private com.toedter.calendar.JDateChooser orderPlacedToDateChooser;
    private javax.swing.JButton overduePaymentsSearchButton;
    private javax.swing.JTable overduePaymentsTable;
    private javax.swing.JPanel paymentsAndOtherDetailsPanel;
    private javax.swing.JCheckBox pickUpTheItemsCheckBox;
    private javax.swing.JComboBox<String> placedDateComboBox;
    private javax.swing.JButton printInvoiceButton;
    private javax.swing.JButton printRecieptButton;
    private javax.swing.JButton removeExistingLeaseAgreementButton;
    private javax.swing.JButton removeItemButton;
    private javax.swing.JLabel requestedDurationLabel;
    private javax.swing.JTextField requestedForPickupTextField;
    private javax.swing.JTextField requestedToDeliverTextField;
    private javax.swing.JPanel resultsPanel;
    private javax.swing.JTextField searchBarTextField;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton searchItemButton;
    private javax.swing.JComboBox<String> searchItemComboBox;
    private javax.swing.JPanel searchItemPanel;
    private javax.swing.JPanel searchPanel;
    private javax.swing.JTable searchResultsTable;
    private javax.swing.JComboBox<String> statusComboBox;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel toDateLabel;
    private javax.swing.JLabel toDateLabel1;
    private javax.swing.JButton uploadExistingLeaseAgreementButton;
    private javax.swing.JLabel userManualFileNameLabel;
    private javax.swing.JButton userManualRemoveButton;
    private javax.swing.JButton userManualUploadButton1;
    private javax.swing.JButton userManualViewButton;
    private javax.swing.JButton viewExistingLeaseAgreementButton;
    // End of variables declaration//GEN-END:variables
}
